MODULE MetaNumerator;

REQUIRE Numerator, MasterDataSettings;

NAMESPACE Utils;

META defineNumber(class, caption, srs)
    number 'Number' = DATA STRING[50] (###class) NONULL CHARWIDTH 10 IN id;
    
    numerator###class = DATA Numerator();
    nameNumerator###class 'Numerator'##' - '##caption = name(numerator###class());
    
    loadDefaultNumerators () + {
        NEW n = Numerator {
            name(n) <- ISTRING[100](caption);
            series(n) <- STRING[10](srs);
            minValue(n) <- 1;
            maxValue(n) <- 999999;
            stringLength(n) <- 6;
            numerator###class() <- n;
        }
    }
    
    WHEN SET(###class o IS ###class) AND numerator###class() AND NOT number(o) DO {
        number(o) <- CONCAT '/', series(numerator###class()), curStringValue(numerator###class());
        incrementValueSession(numerator###class());   
    }
    
    EXTEND FORM options 
        PROPERTIES nameNumerator###class()
    ;
    
    DESIGN options {
        commons {
            MOVE PROPERTY(nameNumerator###class());
        }
    }
END

META defineNumberType(class)
    number 'Number' = DATA STRING[50] (###class) NONULL CHARWIDTH 10 IN id;
    class (STRING[50] number) = GROUP MAX ###class o BY number(o);

    WHEN SETCHANGED(type(###class o)) AND numerator(type(o)) AND NOT number(o) DO {
        number(o) <- CONCAT '/', series(numerator(type(o))), curStringValue(numerator(type(o)));
        incrementValueSession(numerator(type(o)));
    }
END

META defineID(class, caption, srs, width)
    id '{ID}' = DATA STRING[50] (###class) IN id CHARWIDTH width INDEXED;
    ##class (STRING[50] id) = GROUP AGGR ###class o BY id(o);
    
    numerator###class = DATA Numerator();
    nameNumerator###class 'Numerator'##' - '##caption = name(numerator###class());
    
    loadDefaultNumerators () + {
        IF NOT GROUP SUM 1 IF name(Numerator n) = caption THEN {
            NEW n = Numerator {
                name(n) <- caption;
                series(n) <- srs;
                minValue(n) <- 1;
                maxValue(n) <- 999999;
                stringLength(n) <- width;
                numerator###class() <- n;
            }
        }
    }
    
    EXTEND FORM options 
        PROPERTIES nameNumerator###class()
    ;
    
    DESIGN options {
        commons {
            MOVE PROPERTY(nameNumerator###class());
        }
    }
    
    WHEN SETCHANGED(###class o IS ###class AND numerator###class() AND NOT id(o)) DO {
        id(o) <- CONCAT '', series(numerator###class()), curStringValue(numerator###class());
        incrementValueSession(numerator###class());   
    }
END
