MODULE TransferMobile;

REQUIRE CategoryMobile, BarCodeMobile,
        ShipmentDone, ShipmentFilter;

NAMESPACE Inventory;

quantity 'Qty' = DATA LOCAL NESTED NUMERIC[16,3] (Product);
backgroundQuantity (Location l, Product p) = CASE WHEN quantity(p) > onHand(l, p) THEN RGB(255,212,212)
                                                           WHEN quantity(p) THEN RGB(212,255,212); 

FORM transferMobile 'Transfer'
    OBJECTS t = ShipmentType PANEL
    PROPERTIES(t) 'Type' = name SELECTOR SHOWIF countTransferTypes() > 1
    FILTERS isTransfer(t)

    OBJECTS l = Location PANEL
    PROPERTIES(l) name SELECTOR
    FILTERS accessGranted(l),
            active(l)

    OBJECTS p = Product PAGESIZE 50
    PROPERTIES BACKGROUND backgroundQuantity(l, p) READONLY '{Name}' = name(p), 'On hand' = onHand(l, p)
    PROPERTIES BACKGROUND backgroundQuantity(l, p) quantity (p)
    PROPERTIES(p) READONLY PANEL pName '' = name, '' = id, '' = idBarCode, '' = nameUom
    ORDERS name(p)
    FILTERS onHand(l, p)

    FILTERGROUP quantity
        FILTER 'Selected' quantity(p)
;

DESIGN transferMobile {
    OBJECTS {
        class = '';
        border = FALSE;
        MOVE PROPERTY(name(t)) { alignment = STRETCH; };
        MOVE PROPERTY(name(l)) { caption = 'Source'; alignment = STRETCH; };
        NEW filters {
            alignment = STRETCH;
            NEW groupFilter {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE FILTERGROUPS(p);
            }
        }
        MOVE GRID(p) {
            fill = 1;
            height = 300;
            PROPERTY(name(p)) { charWidth = 25; fontSize = 10; }
            PROPERTY(onHand(l, p)) { charWidth = 4; }
            PROPERTY(quantity(p)) { charWidth = 4; }
        }
        REMOVE BOX(p);
        MOVE PROPERTY(pName) { alignment = STRETCH; }
        NEW panelRow1 {
            horizontal = TRUE;
            alignment = STRETCH;
            MOVE PROPERTY(id(p));
            MOVE PROPERTY(idBarCode(p));
            MOVE PROPERTY(nameUom(p));
        }
    }
    REMOVE TOOLBARBOX;
}

@defineNameFilter(transferMobile, p, filters);
@defineBarCodeFilter(transferMobile, p, filters);
@defineCategoryFilter(transferMobile, p, filters);

// keyboard
DESIGN transferMobile {
    OBJECTS {
        NEW quantityPane { alignment = STRETCH; }
    }
}
@defineKeyboardQuantity(transferMobile, Product, p, quantityPane, 16);

setOnHandQuantity '#' (Location l, Product p) { quantity(p) <- onHand(l, p); };

EXTEND FORM transferMobile
    PROPERTIES(l, p) setOnHandQuantity
;
DESIGN transferMobile {
    quantityActions {
        MOVE PROPERTY(setOnHandQuantity(l, p)) { fill = 1; fontSize = 16; focusable = FALSE; }
    }
}

// actions
createTransfer 'Move' (ShipmentType t, Location from) {
    quantity(Product p) <- NULL WHERE NOT onHand(from, p) > 0;
    ASK 'Move from' + ' ' + name(from) + ' -> ' + nameShipmentToLocation() + ' ' + (GROUP SUM 1 IF quantity(Product p)) + ' ' + 'lines' + '?\n' +
        GROUP CONCAT name(Product p) + ' - ' + quantity(p), '\n' ORDER p DO {
        NEWSESSION {
            NEW s = Shipment {
                type(s) <- t;
                
                done(s) <- TRUE;
                immediate(s) <- TRUE;
                
                location(s) <- from;
                toLocation(s) <- shipmentToLocation();
                
                FOR quantity(Product p) NEW l = ShipmentLine DO {
                    shipment(l) <- s;
                    product(l) <- p;
                    done(l) <- quantity(p);
                }
            }
            APPLY;
            IF NOT canceled() THEN quantity(Product p) <- NULL;
        }
    }
} 

EXTEND FORM transferMobile
    PROPERTIES nameShipmentToLocation(), createTransfer(t, l) READONLYIF NOT (GROUP SUM 1 IF quantity(Product pp)) OR NOT shipmentToLocation()
;

DESIGN transferMobile {
    OBJECTS {
        NEW transfer {
            horizontal = TRUE;
            alignment = STRETCH;
            MOVE PROPERTY(nameShipmentToLocation()) { fill = 1; };
            MOVE PROPERTY(createTransfer(t, l));        
        }
    }
} 

NAVIGATOR {
    dashboards {
        NEW 'Mobile transfer' = transferMobile;
    }
}