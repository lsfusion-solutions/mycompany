MODULE AdjustmentSearch;

REQUIRE AdjustmentInProgress, BarCode;

NAMESPACE Inventory;

realQuantity 'Real quantity' (Adjustment, Product, Location) = 
    GROUP SUM realQuantity(AdjustmentLine l) BY adjustment(l), product(l), location(l);

setRealQuantity(Adjustment a, Product p, Location loc, NUMERIC[16,3] q) {
    IF lastAdjustmentLine(a, p, loc) THEN {
        IF q THEN
            realQuantity(AdjustmentLine l) <- q IF l = lastAdjustmentLine(a, p, loc)
                WHERE adjustment(l) = a AND product(l) = p AND location(l) = loc;
        ELSE
            DELETE AdjustmentLine l WHERE adjustment(l) = a AND product(l) = p AND location(l) = loc;
    } ELSE
        IF q THEN
            NEW l = AdjustmentLine {
                adjustment(l) <- a;
                product(l) <- p;
                location(l) <- loc;
                realQuantity(l) <- q;
            }
}
    
changeRealQuantity(Adjustment a, Product p, Location loc) {
    INPUT q = NUMERIC[16,3] DO {
        setRealQuantity(a, p, loc, q);
    }
}

EXTEND FORM adjustment
    TREE locations lt = Location PARENT parent(lt)
    PROPERTIES READONLY name(lt)
    ORDERS name(lt)
    FILTERS active(lt),
            accessChildGranted(lt)
        
    OBJECTS lp = (loc = Location, p = Product)
    PROPERTIES READONLY    'Location' = canonicalName(loc)
    PROPERTIES(p) READONLY 'Product' = name, nameUom, idBarCode, id  
    PROPERTIES(loc, p) READONLY      onHand
    PROPERTIES READONLYIF readonly(a) realQuantity(a, p, loc) ON CHANGE changeRealQuantity(a, p, loc)
    FILTERS level(loc, lt), onHand(loc, p),
            active(loc),
            accessGranted(loc)
    ORDERS name(p)
;

DESIGN adjustment {
    details {
        NEW search {
            showIf = status(a) = AdjustmentStatus.inProgress AND type(a) = AdjustmentType.manual;
            fill = 1;
            horizontal = TRUE;
            caption = 'Search';
            MOVE BOX(TREE locations);
            MOVE BOX (lp) { fill = 2; }
        }
    }
}

// barcode
setRealQuantity(Adjustment a, Product p, NUMERIC[16,3] q) { setRealQuantity(a, p, location(a), q); }
realQuantity(Adjustment a, Product p) = realQuantity(a, p, location(a));
lastAdjustmentLine(Adjustment a, Product p) = lastAdjustmentLine(a, p, location(a));

@defineBarCodeSearch(adjustment, a, l, realQuantity);