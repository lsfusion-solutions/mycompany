MODULE AdjustmentLot;

REQUIRE Adjustment, ProductLot, AdjustmentSearch, AdjustmentInv, InvLedgerLot;

NAMESPACE Inventory;

@defineDocLot (adjustment, product, theoreticalQuantity, done, ' (theoretical)');

@defineDocLot (adjustment, product, realQuantity, done, ' (real)');

fillTheoreticalQuantity(AdjustmentLine al) + {
    theoreticalQuantity(al, Lot l) <- prevOnHandB(location(al), l, dateTime(adjustment(al))) IF product(l) = product(al);
}
WHEN LOCAL (SETCHANGED (location(AdjustmentLine al)) OR SETCHANGED(product(al))) 
           AND NOT CHANGED(theoreticalQuantity(al)) DO
    fillTheoreticalQuantity(al); 

WHEN LOCAL CHANGED(theoreticalQuantity(AdjustmentLine al, Lot l)) AND NOT CHANGED(realQuantity(al, l)) 
           AND status(adjustment(al)) = AdjustmentStatus.draft DO 
    realQuantity(al, l) <- theoreticalQuantity(al, l);
        
background (AdjustmentLine al, Lot l) = CASE WHEN theoreticalQuantity(al, l) < realQuantity(al, l) THEN RGB(152,251,152)
                                              WHEN theoreticalQuantity(al, l) > realQuantity(al, l) THEN RGB(252,184,205);

@defineDocBarCodeLot (adjustment, product, realQuantity);

beforeProcessAdjustmentLineLotBarCode(Adjustment a, STRING s) + {
    IF NOT lot(s) THEN {
        NEW l = Lot {
            id(l) <- STRING[100](s);
        }
    }
}

// design
EXTEND FORM adjustment
    PROPERTIES(l) AFTER theoreticalQuantity(l) SHOWIF useLot() 
                  BACKGROUND RGB(198,230,247) IF useLot(product(l))
                  theoreticalQuantityLot
    PROPERTIES(l) AFTER realQuantity(l) SHOWIF useLot() 
                  BACKGROUND RGB(198,230,247) IF useLot(product(l)) 
                  READONLYIF (NOT status(adjustment(l)) = AdjustmentStatus.inProgress)
                  realQuantityLot
    
    OBJECTS lot = Lot
    PROPERTIES (lot) id READONLY
    PROPERTIES (l, lot) theoreticalQuantity READONLYIF readonly(a), realQuantity READONLYIF readonly(a) OR NOT status(adjustment(l)) = AdjustmentStatus.inProgress BACKGROUND background(l)
    PROPERTIES (lot) DELETE GRID
    FILTERS realQuantity(l, lot) OR theoreticalQuantity(l, lot)
;

DESIGN adjustment {
    linesTab {
        MOVE BOX(lot){
            caption = 'Lots';
            showIf = useLot();
        }
    }
}

afterProcessAdjustmentLineLotBarCode(Adjustment a, STRING s) + {
    SEEK adjustment.lot = lot(s);
    ACTIVATE PROPERTY adjustment.realQuantity(l, lot); 
}

// ledgers
difference (AdjustmentLine al, Lot l) = realQuantity(al, l) (-) theoreticalQuantity(al, l);

countDifferenceLot (AdjustmentLine al) = GROUP SUM 1 IF difference(al, Lot l); 
createInAdjustment (AdjustmentLine al) += TRUE IF countDifferenceLot(al); 

quantity (InvAdjustment a, Lot l) += IF NOT difference(line(a)) > 0 THEN -difference(line(a), l) ELSE difference(line(a), l);