MODULE Adjustment;

REQUIRE InventorySettings, Location, Product, InvLedger, Company, BarCode, Doc;
                                  
NAMESPACE Inventory;

CLASS Adjustment 'Инвентаризация';

@defineStatus(adjustment, 'инвентаризации');

dateTime 'Дата' = DATA DATETIME (Adjustment);
WHEN LOCAL SET(Adjustment a IS Adjustment) AND NOT CHANGED(dateTime(a)) DO dateTime(a) <- currentDateTime();

@defineNumber(adjustment, 'Инвентаризации', 'ИН');

numberDate 'Описание' (Adjustment a) = number(a) + ' от ' + dateTime(a) IN id;

DESIGN options {
    general {
        MOVE PROPERTY(nameNumeratorAdjustment());
    }
}

location 'Место хранения' = DATA Location (Adjustment) NONULL;
nameLocation 'Место хранения' (Adjustment a) = name(location(a));

// type
CLASS AdjustmentType 'Тип инвентаризации' {
    all 'Все',
    category 'По категории',
    manual 'Вручную'
}
name 'Имя' (AdjustmentType o) = staticCaption(o) IF o IS AdjustmentType CHARWIDTH 15;

FORM type 'Тип инвентаризации'
    OBJECTS t = AdjustmentType PANEL
    PROPERTIES(t) 'Тип инвентаризации' = name
    
    EDIT AdjustmentType OBJECT t  
;

type 'Тип' =  DATA AdjustmentType (Adjustment) NONULL;
nameType 'Тип инвентаризации' (Adjustment a) = name(type(a));

category 'Категория' = DATA Category (Adjustment);
nameCategory 'Категория' (Adjustment a) = name(category(a));

note 'Примечание' = DATA ISTRING[50] (Adjustment);

// lines
CLASS AdjustmentLine 'Строка инвентаризации';

adjustment = DATA Adjustment (AdjustmentLine) NONULL DELETE;

index '№' = PARTITION SUM 1 ORDER AdjustmentLine l BY adjustment(l) IN id MATERIALIZED CHARWIDTH 3;

product 'Товар' = DATA Product (AdjustmentLine);
nameProduct 'Товар' (AdjustmentLine l) = name(product(l));
idBarCodeProduct 'Штрихкод' (AdjustmentLine l) = idBarCode(product(l));
idProduct 'Код' (AdjustmentLine l) = id(product(l));

uom = DATA Uom (AdjustmentLine);
nameUom 'Ед. изм.' (AdjustmentLine l) = name(uom(l));
WHEN LOCAL CHANGED(product(AdjustmentLine l)) DO uom(l) <- uom(product(l)); 

location 'Место хранения' = DATA Location (AdjustmentLine);
nameLocation 'Место хранения' (AdjustmentLine l) = canonicalName(location(l));

theoreticalQuantity 'Теоретическое кол-во' = DATA NUMERIC[16,3] (AdjustmentLine);
WHEN LOCAL (SETCHANGED (location(AdjustmentLine l)) OR SETCHANGED(product(l))) AND q = onHand(location(l), product(l)) 
           AND NOT CHANGED(theoreticalQuantity(l)) DO 
    theoreticalQuantity(l) <- q;

FORM adjustment 'Инвентаризация'
    OBJECTS a = Adjustment PANEL 
    PROPERTIES(a) dateTime, number 
    PROPERTIES(a) nameLocation, nameType, nameCategory SHOWIF type(a) = AdjustmentType.category
    PROPERTIES(a) note 
    
    OBJECTS l = AdjustmentLine
    PROPERTIES(l) index READONLY, 
                  nameProduct, nameUom, idBarCodeProduct, idProduct,
                  nameLocation, 
                  theoreticalQuantity
    PROPERTIES(l) NEW, DELETE
    FILTERS adjustment(l) = a
    
    EDIT Adjustment OBJECT a
;

DESIGN adjustment {
    OBJECTS {
        NEW header {
            NEW headerCenter {
                alignment = STRETCH;
                type = CONTAINERH;
                NEW headerLeft {
                    MOVE PROPERTY(dateTime(a));
                    MOVE PROPERTY(number(a));
                }
                NEW headerRight {
                    MOVE PROPERTY(nameLocation(a))  { notNull = TRUE; }
                    MOVE PROPERTY(nameType(a)) { notNull = TRUE; }           
                    MOVE PROPERTY(nameCategory(a)) { notNull = TRUE; }           
                }
            }
            NEW headerBottom {
                alignment = STRETCH;
                MOVE PROPERTY(note(a));           
            }
        }
        NEW details {
            fill = 1;
            type = TABBED;
            NEW lines {
                caption = 'Строки';
                MOVE BOX(l);
            }
        }
    }
}

@defineDocHistory(adjustment, a, product, theoreticalQuantity);

FORM adjustments 'Инвентаризации'
    OBJECTS a = Adjustment
    PROPERTIES(a) READONLY dateTime, number, nameType, nameLocation, nameCategory, note
    PROPERTIES(a) NEWSESSION EDIT, DELETE 
    
    LIST Adjustment OBJECT a
;

@defineStatusForm(adjustment, a);
@defineDocLinesCount(adjustment, a);

NAVIGATOR {
    operations {
        NEW adjustments;
    }
}

// new
FORM adjustmentType 'Создать инвентаризацию'
    OBJECTS a = Adjustment PANEL 
    PROPERTIES(a) nameLocation, nameType,
                  nameCategory SHOWIF type(a) = AdjustmentType.category    
;

DESIGN adjustmentType {
    width = 700;
    OBJECTS {
        MOVE BOX(a) {
            PROPERTY(nameLocation(a)) { notNull = TRUE; }
            PROPERTY(nameType(a)) { notNull = TRUE; }
        }
    }
}

newAdjustment 'Инвентаризация' () {
    NEWSESSION {
        NEW na = Adjustment {
            DIALOG adjustmentType OBJECTS a = na NOMANAGESESSION DO { 
                FOR (level(Location loc, location(na)) AND onHand(loc, Product p)) AND 
                    (level(category(p), category(na)) OR NOT type(na) = AdjustmentType.category) AND 
                    NOT type(na) = AdjustmentType.manual DO NEW l = AdjustmentLine {
                        adjustment(l) <- na;
                        product(l) <- p;
                        location(l) <- loc;
                }     
                SHOW adjustment OBJECTS a = na;                
            }
        }
    }
} IMAGE 'add.png' CHANGEKEY 'INSERT' HIDE;

EXTEND FORM adjustments
    PROPERTIES newAdjustment() DRAW a TOOLBAR 
;
