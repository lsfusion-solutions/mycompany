MODULE ReceiptPutAway;

REQUIRE ReceiptDone, ReceiptInv, LocationProduct, Input;

NAMESPACE Inventory;

// type
putAway 'Put away' = DATA BOOLEAN (ReceiptType);
EXTEND FORM receiptType PROPERTIES(o) putAway;

// status
EXTEND CLASS ReceiptStatus {
    putAway 'Put away'
}
putAway 'Put away' = DATA BOOLEAN (Receipt);

status(Receipt r) += WHEN putAway(r) THEN ReceiptStatus.putAway;

markAsPutAway 'Put away' (Receipt r) {
    APPLY; 
    IF canceled() THEN RETURN;
    
    NEWSESSION {
        putAway(r) <- TRUE;
        APPLY;
    }
}

EXTEND FORM receipt
    PROPERTIES(r) markAsPutAway SHOWIF putAway(type(r)) AND status(r) = ReceiptStatus.done, putAway
;

DESIGN receipt {
    primaryActions {
        MOVE PROPERTY(markAsPutAway(r)) { valueClass = 'btn-primary'; }
    }
    statusGroup {
        MOVE PROPERTY(putAway(r)) {
            valueClass = 'btn-check';
            captionClass = 'btn btn-outline-primary btn-arrow-right';
        }
    }
}

EXTEND FORM receipts
    EXTEND FILTERGROUP status
        FILTER 'Put away' status(r) = ReceiptStatus.putAway
;

// put away process
CLASS ReceiptPutAway 'Put away';

receiptLine 'Receipt line' = DATA ReceiptLine (ReceiptPutAway) NONULL DELETE;

location 'Location' = DATA Location (ReceiptPutAway);
nameLocation 'Location' (ReceiptPutAway p) = name(location(p));

CONSTRAINT location(ReceiptPutAway p) AND NOT level(location(p), location(receipt(receiptLine(p)))) 
           CHECKED BY location[ReceiptPutAway]
           MESSAGE 'The storage location must be a child of the storage location from the document';

quantity 'Qty' = DATA NUMERIC[16,3] (ReceiptPutAway); 

put 'Put away' (ReceiptLine l) = GROUP SUM quantity(ReceiptPutAway p) IF receiptLine(p) = l;
ledgerDone(ReceiptLine l) += put(l);

CONSTRAINT put(ReceiptLine l) > done(l) MESSAGE 'The amount placed cannot be greater than the accepted amount';

EXTEND FORM receipt  
    OBJECTS p = ReceiptPutAway
    PROPERTIES(p) nameLocation, quantity, DELETE GRID
    FILTERS receiptLine(p) = l
;

FORM putAwayLoc 'Locations'
    OBJECTS loc = Location
    
    OBJECTS l = Location
    PROPERTIES(l) READONLY name, nameParent, canonicalName
    FILTERS level(l,loc), active(l)
;

DESIGN putAwayLoc {
    PROPERTY(formOk()) { changeKey = 'ENTER'; }
}

newPutAway 'Put away (+)' (ReceiptLine ln) {
    DIALOG putAwayLoc OBJECTS l = location(location(receipt(ln)), product(ln)) INPUT, loc = location(receipt(ln)) DO {
        DIALOG dialogQuantity OBJECTS q = done(ln) (-) put(ln) INPUT DO {
            IF q > 0 THEN {
                NEW p = ReceiptPutAway {
                    receiptLine(p) <- ln;
                    location(p) <- l;
                    quantity(p) <- q;
                    SEEK receipt.p = p;
                }
            } 
        }
    }
} CHANGEKEY 'ADD' HIDE;

toPutAway (Receipt r) = putAway(type(r)) AND (ready(r) OR done(r));

EXTEND FORM receipt
    PROPERTIES(l) put SHOWIF toPutAway(r) ON CHANGE newPutAway(l)
    
    PROPERTIES newPutAway(l) DRAW p TOOLBAR SHOWIF toPutAway(r) DISABLEIF readonly(r)
;

DESIGN receipt {
    linesTab {
        NEW receiptPutAway {
            caption = 'Put away';
            showIf = toPutAway(r);
            MOVE FILTERS(p);
            MOVE GRID(p);
            MOVE TOOLBARBOX(p);
        }
    }
}

// invledger
CLASS ReceiptPutAwayLedger 'Receipt' : InvLedger;
putAwayLedger = AGGR ReceiptPutAwayLedger WHERE quantity(ReceiptPutAway line);

type(ReceiptPutAwayLedger l) += nameType(receipt(receiptLine(line(l))));

active(ReceiptPutAwayLedger l) += active(receipt(receiptLine(line(l))));
dateTime(ReceiptPutAwayLedger l) += executionDateTime(receipt(receiptLine(line(l))));
toLocation(ReceiptPutAwayLedger l) += location(line(l));

product(ReceiptPutAwayLedger l) += product(receiptLine(line(l)));
quantity(ReceiptPutAwayLedger l) += quantity(line(l));

partner(ReceiptPutAwayLedger l) += vendor(receipt(receiptLine(line(l))));

number(ReceiptPutAwayLedger l) += number(receipt(receiptLine(line(l))));

edit (ReceiptPutAwayLedger l) + { edit(receiptLine(line(l))); }