MODULE Scrap;

REQUIRE InventorySettings, Product, Location, InvLedger, BarCode, Doc, ScrapType;

NAMESPACE Inventory;

CLASS Scrap 'Списание';

@defineStatus(scrap, 'списания');

// type
type 'Тип' = DATA ScrapType (Scrap) NONULL;
nameType 'Тип' (Scrap r) = name(type(r));

WHEN LOCAL SET(Scrap r IS Scrap) AND NOT CHANGED(type(r)) DO type(r) <- defaultScrapType(); 

dateTime 'Дата' = DATA DATETIME (Scrap) NONULL;
dateTime(Scrap s) <- currentDateTime() WHEN SET(s IS Scrap);

@defineNumberType(scrap);

numberDate 'Описание' (Scrap s) = number(s) + ' от ' + dateTime(s) IN id;

location 'Место хранения' = DATA Location (Scrap) NONULL;
nameLocation 'Место хранения' (Scrap s) = name(location(s));

// lines
CLASS ScrapLine 'Строка списания';

scrap 'Списание' = DATA Scrap (ScrapLine) NONULL DELETE;

index '№' = PARTITION SUM 1 ORDER ScrapLine l BY scrap(l) IN id MATERIALIZED CHARWIDTH 3;

product 'Продукт' = DATA Product(ScrapLine);
nameProduct 'Продукт' (ScrapLine l) = name(product(l));
idBarCodeProduct 'Штрихкод' (ScrapLine l) = idBarCode(product(l));
idProduct 'Код' (ScrapLine l) = id(product(l));

uom = DATA Uom (ScrapLine);
nameUom 'Ед. изм.' (ScrapLine l) = name(uom(l));
WHEN LOCAL CHANGED(product(ScrapLine l)) DO uom(l) <- uom(product(l)); 

quantity 'Кол-во' = DATA NUMERIC[16,3] (ScrapLine);

FORM scrap 'Списание'
    OBJECTS s = Scrap PANEL 
    PROPERTIES(s) nameType, dateTime, number, nameLocation
    
    OBJECTS l = ScrapLine
    PROPERTIES(l) index, nameProduct, nameUom, idBarCodeProduct, idProduct, quantity, NEW, DELETE
    FILTERS scrap(l) = s
    
    EDIT Scrap OBJECT s
;

DESIGN scrap {
    OBJECTS {
        PROPERTY(nameType(s)) { notNull = TRUE; }
        NEW details {
            fill = 1;
            type = TABBED;
            NEW lines {
                caption = 'Строки';
                MOVE BOX(l);
            }
        }
    }
}

@defineDocHistory(scrap, s, product, quantity);

FORM scraps 'Списания'
    OBJECTS s = Scrap 
    PROPERTIES(s) READONLY nameType, dateTime, number, nameLocation
    PROPERTIES(s) NEWSESSION NEW, EDIT, DELETE
    
    LIST Scrap OBJECT s
;

@defineStatusForm(scrap, s);
@defineDocLinesCount(scrap, s);

NAVIGATOR {
    operations {
        NEW scraps;
    }
}


// copy
copy 'Копировать' (Scrap s) {
    NEWSESSION {
        NEW ns = Scrap {
            dateTime(ns) <- dateTime(s);
            location(ns) <- location(s);
            FOR scrap(ScrapLine l) = s INLINE NEW nl = ScrapLine DO {
                scrap(nl) <- ns;
                product(nl) <- product(l);
                quantity(nl) <- quantity(l);
            }
            SHOW scrap OBJECTS s = ns DOCKED;
        }
    }
}

EXTEND FORM scrap
    PROPERTIES(s) copy
;

DESIGN scrap {
    secondaryActions {
        MOVE PROPERTY(copy(s));
    }
}