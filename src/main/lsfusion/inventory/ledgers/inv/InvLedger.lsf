MODULE InvLedger;

REQUIRE InventorySettings, Category, Product, Location, Partner, Time;

NAMESPACE Inventory;

CLASS ABSTRACT InvLedger 'Inventory ledger';
class 'Type' (InvLedger l) = objectClassName(l) IF l IS InvLedger CHARWIDTH 15;

type 'Type' = ABSTRACT ISTRING[100] (InvLedger) CHARWIDTH 20 MATERIALIZED;

active '{Active}' = ABSTRACT BOOLEAN (InvLedger) MATERIALIZED;
notAccepted 'Not accepted' = ABSTRACT BOOLEAN (InvLedger) MATERIALIZED;
dateTime 'Time' = ABSTRACT DATETIME (InvLedger) MATERIALIZED;
number 'Number' = ABSTRACT STRING[50] (InvLedger) CHARWIDTH 10 MATERIALIZED;

fromLocation 'Source location' = ABSTRACT Location (InvLedger) MATERIALIZED;
nameFromLocation 'Source location' (InvLedger l) = name(fromLocation(l));

toLocation 'Destination location' = ABSTRACT Location (InvLedger) MATERIALIZED;
nameToLocation 'Destination location' (InvLedger l) = name(toLocation(l));

product 'Product' = ABSTRACT Product (InvLedger) MATERIALIZED;
nameProduct 'Product' (InvLedger l) = name(product(l));

INDEX product(InvLedger l);
INDEX fromLocation(InvLedger l), product(l), dateTime(l), l;
INDEX toLocation(InvLedger l), product(l), dateTime(l), l;

quantity 'Qty' = ABSTRACT NUMERIC[16,3] (InvLedger) MATERIALIZED;

partner = ABSTRACT Partner (InvLedger) MATERIALIZED;
namePartner 'Partner' (InvLedger l) = name(partner(l));

// result  
inQuantity 'Received' (Location ll, Product p) = GROUP SUM quantity(InvLedger l) 
                                                    IF active(l) AND NOT notAccepted(l) AND toLocation(l) = ll AND product(l) = p MATERIALIZED;
                                                    
inQuantityA (Location ll, Product p, DATETIME dt) = inQuantity(ll, p) (-)
    GROUP SUM quantity(InvLedger l)  IF active(l) AND NOT notAccepted(l) AND toLocation(l) = ll AND product(l) = p AND dateTime(l) > dt;

inQuantityB (Location ll, Product p, DATETIME dt) = inQuantity(ll, p) (-)
    GROUP SUM quantity(InvLedger l)  IF active(l) AND NOT notAccepted(l) AND toLocation(l) = ll AND product(l) = p AND dateTime(l) >= dt;
                                   
outQuantity 'Quantity (sent)' (Location ll, Product p) = GROUP SUM quantity(InvLedger l) 
                                                    IF active(l) AND fromLocation(l) = ll AND product(l) = p MATERIALIZED;

outQuantityA 'Quantity (sent)' (Location ll, Product p, DATETIME dt) = outQuantity(ll, p) (-)
    GROUP SUM quantity(InvLedger l) IF active(l) AND  fromLocation(l) = ll AND product(l) = p AND dateTime(l) > dt;

outQuantityB 'Quantity (sent)' (Location ll, Product p, DATETIME dt) = outQuantity(ll, p) (-)
    GROUP SUM quantity(InvLedger l) IF active(l) AND  fromLocation(l) = ll AND product(l) = p AND dateTime(l) >= dt;

onHand 'On hand' (Location ll, Product p) = inQuantity(ll, p) (-) outQuantity(ll, p) MATERIALIZED;
prevOnHand (Location ll, Product p) = PREV(onHand(ll, p));

onHand 'On hand' (Location l) = GROUP SUM onHand(l, Product p);

onHandA 'On hand' (Location ll, Product p, DATETIME dt) = 
                                                            inQuantityA(ll, p, dt) (-) outQuantityA(ll, p, dt) IF dt IS DATETIME;
prevOnHandA (Location ll, Product p, DATETIME dt) = PREV(onHandA(ll, p, dt));

onHandB 'On hand' (Location ll, Product p, DATETIME dt) = 
                                                            inQuantityB(ll, p, dt) (-) outQuantityB(ll, p, dt) IF dt IS DATETIME;
prevOnHandB 'On hand' (Location ll, Product p, DATETIME dt) = PREV(onHandB(ll, p, dt));

onHandRec 'On hand (including nesting)' (Location l, Product p) = 
    GROUP SUM onHand(Location child, p) IF level(child, l) MATERIALIZED;
prevOnHandRec 'On hand (including nesting)' (Location l, Product p) = PREV(onHandRec(l, p));

locations 'Locations' (Location l, Product p) = GROUP CONCAT name(Location child) IF onHand(child, p) AND level(child, l), ', ' ORDER child;

// dates
dateReceived 'Last receipt date' (Location l, Product p) = 
    GROUP LAST dateTime(InvLedger il) ORDER dateTime(il), il WHERE active(il) AND NOT notAccepted(il) AND toLocation(il) = l AND product(il) = p MATERIALIZED;
prevDateReceived (Location l, Product p) = PREV(dateReceived(l, p));
    
dateShipped 'Last shipment date' (Location l, Product p) = 
    GROUP LAST dateTime(InvLedger il) ORDER dateTime(il), il WHERE active(il) AND fromLocation(il) = l AND product(il) = p;
    
datePrevOperation(Location l, Product p, DATETIME dt) = 
    GROUP LAST dateTime(InvLedger il) ORDER dateTime(il), il 
    WHERE (fromLocation(il) = l OR toLocation(il) = l) AND product(il) = p AND dateTime(il) < dt AND active(il);

onHandAFromLocation 'On hand after (source)' (InvLedger inv) = onHandA(fromLocation(inv), product(inv), dateTime(inv));
onHandAToLocation 'On hand after (destination)' (InvLedger inv)= onHandA(toLocation(inv), product(inv), dateTime(inv));                                               

// constraint
positiveOnHand 'Disallow negative inventory' = DATA BOOLEAN (Location);
            
recPositiveOnHand 'Disallow negative inventory' (Location child) = 
    GROUP LAST positiveOnHand(Location parent) ORDER DESC level(child, parent) 
    WHERE positiveOnHand(parent) MATERIALIZED CHARWIDTH 15;
                                                      
CONSTRAINT SET(onHand(Location ll, Product p) < 0) AND recPositiveOnHand(ll) 
            MESSAGE 'The current balance cannot be negative';
            
EXTEND FORM location
    PROPERTIES(l) positiveOnHand
;
DESIGN location {
    params {
        MOVE PROPERTY(positiveOnHand(l));
    }
}

EXTEND FORM locations
    PROPERTIES(l) READONLY recPositiveOnHand
;