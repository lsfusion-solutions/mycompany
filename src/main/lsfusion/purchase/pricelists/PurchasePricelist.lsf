MODULE PurchasePricelist;

REQUIRE ItemPurchase, PartnerPurchase, PurchaseSettings, BarCode, Doc;

NAMESPACE Purchase; 

CLASS Pricelist 'Vendor pricelist';

@defineDocStatus(pricelist, 'Vendor pricelist status');

startDateTime 'Start date' = DATA DATETIME (Pricelist);
startDateTime(Pricelist l) <- currentDateTime() WHEN SET(l IS Pricelist);
 
endDateTime 'End date' = DATA DATETIME (Pricelist);

@defineNumber(pricelist, 'Vendor pricelists', 'PLP');

numberDate 'Description' (Pricelist p) = number(p) + ' (' + startDateTime(p) + ')' IN id;

note 'Note' = DATA STRING[50] (Pricelist);

vendor 'Vendor' = DATA Partner (Pricelist);
nameVendor 'Vendor' (Pricelist p) = name(vendor(p));

CONSTRAINT vendor(Pricelist o) AND NOT isVendor(vendor(o))
                CHECKED BY vendor[Pricelist]
                MESSAGE 'The partner of the vendor\'s pricelist must be a vendor';

// lines
CLASS PricelistLine 'Vendor pricelist line';

pricelist 'Pricelist' = DATA Pricelist (PricelistLine) NONULL DELETE;

index 'â„–' = PARTITION SUM 1 ORDER PricelistLine l BY pricelist(l) IN id MATERIALIZED CHARWIDTH 3;

item '{Item}' = DATA Item (PricelistLine);
nameItem '{Item}' (PricelistLine l) = name(item(l));
idBarCodeItem 'Barcode' (PricelistLine l) = idBarCode(item(l)); 
idItem '{ID}' (PricelistLine l) = id(item(l));
referenceItem 'Reference' (PricelistLine l) = reference(item(l));

uom (PricelistLine l) = uom(item(l));
nameUom 'UoM' (PricelistLine l) = name(uom(l)); 

vendorName 'Vendor name' = DATA STRING[200] (PricelistLine);
vendorReference 'Vendor reference' = DATA STRING[50] (PricelistLine);

price 'Price' = DATA NUMERIC[10,2] (PricelistLine);

// Line properties
imagedNameStatus 'Status' (PricelistLine prl) = imagedNameStatus(pricelist(prl));
number 'Number' (PricelistLine prl) = number(pricelist(prl)) IN id;
numberDate 'Description' (PricelistLine l) = numberDate(pricelist(l));
startDateTime 'Start date' (PricelistLine prl) = startDateTime(pricelist(prl));
endDateTime 'End date' (PricelistLine prl) = endDateTime(pricelist(prl));
vendor 'Vendor' (PricelistLine prl) = vendor(pricelist(prl));
nameVendor 'Vendor' (PricelistLine prl) = nameVendor(pricelist(prl));
note 'Note' (PricelistLine prl) = note(pricelist(prl));

FORM pricelist 'Vendor pricelist'
    OBJECTS p = Pricelist PANEL
    PROPERTIES(p) READONLYIF readonly(p) number, startDateTime, endDateTime, nameVendor, note
    
    OBJECTS l = PricelistLine
    PROPERTIES(l) READONLYIF readonly(p)
                  index READONLY,
                  nameItem ON CHANGE {
                      INPUT i = item(l) LIST name(i) ACTIONS 'add' { newProduct(STRING(i)); } DO item(l) <- i;
                  },
                  nameUom READONLY, vendorName, vendorReference,
                  idBarCodeItem, idItem, referenceItem, price,
                  NEW, DELETE 
    FILTERS pricelist(l) = p
    
    EDIT Pricelist OBJECT p
;

DESIGN pricelist {
    caption = badged('Vendor pricelist', number(p) + '(' + startDateTime(p) + ')');
    OBJECTS {
        NEW header {
            horizontal = TRUE;
            alignment = STRETCH;
            NEW headerLeft {
                MOVE PROPERTY(number(p));
                NEW period {
                    alignment = STRETCH;
                    horizontal = TRUE;
                    MOVE PROPERTY(startDateTime(p)) { caption = 'Valid from'; }
                    MOVE PROPERTY(endDateTime(p)) { caption = '{to}'; }                
                }
                MOVE PROPERTY(nameVendor(p));
                MOVE PROPERTY(note(p));
            }
            NEW relatedDoc {
                fill = 1;
                tabbed = TRUE;
            }
        }
        NEW details {
            fill = 1;
            tabbed = TRUE;
            NEW lines {
                caption = 'Lines';
                MOVE BOX(l) { caption = ''; }
            }
        }
    }
    TOOLBARBOX {
        NEW footer FIRST {
            horizontal = TRUE;
        }
    }
}

@defineDocSearch(pricelist, item, price, 'Price', p, canBePurchased);

FORM pricelists 'Vendor pricelists'
    OBJECTS p = Pricelist
    PROPERTIES(p) READONLY number, startDateTime, endDateTime, nameVendor, note
    PROPERTIES(p) NEWSESSION NEW, EDIT, DELETE 

    LIST Pricelist OBJECT p
;

DESIGN pricelists {
    OBJECTS {
        NEW filters FIRST { 
            caption = 'Filters';
            horizontal = TRUE;
        }
    }
}

@defineDocStatusForm(pricelist, p, note);
@defineDocLinesCount(pricelist, p);

@defineObjectComments(pricelist, p, details);

NAVIGATOR {
    operations {
        NEW pricelists;       
    }
}

// copy
copy 'Copy' (Pricelist pl) {
    NEWSESSION {
        NEW p = Pricelist {
            startDateTime(p) <- startDateTime(pl);
            endDateTime(p) <- endDateTime(pl);
            note(p) <- note(pl);
            vendor(p) <- vendor(pl);
            FOR pricelist(PricelistLine l)  = pl DO NEW nl = PricelistLine {
                pricelist(nl) <- p;
                item(nl) <- item(l);
                price(nl) <- price(l);
                vendorName(nl) <- vendorName(l);
                vendorReference(nl) <- vendorReference(l);
            }
            SHOW pricelist OBJECTS p = p;
        }
    }
}

EXTEND FORM pricelist
    PROPERTIES(p) copy 
;

DESIGN pricelist {
    secondaryActions {
        MOVE PROPERTY(copy(p)) { valueClass = 'btn-secondary'; }
    }
}