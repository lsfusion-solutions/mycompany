MODULE ProjectTimeEntry;

REQUIRE Project, TimeEntry;

NAMESPACE ProjectManagement;

project = DATA Project (TimeEntry);
nameProject 'Project' (TimeEntry e) = name(project(e)) IN id;
nameCustomer 'Partner' (TimeEntry e) = namePartner(project(e));

projectRequired 'Project required' = DATA BOOLEAN (TimeEntryType);
EXTEND FORM timeEntryType PROPERTIES(o) projectRequired; 

CONSTRAINT projectRequired(type(TimeEntry e)) AND NOT project(e)
    MESSAGE 'No project selected for the time entry';

countTimeEntry 'Time entries' (Project p) = GROUP SUM 1 IF project(TimeEntry t) = p MATERIALIZED;  
hoursTimeEntry 'Hours' (Project p) = GROUP SUM hours(TimeEntry t) IF project(t) = p MATERIALIZED;  

INDEX project(TimeEntry e), date(e), employee(e);

timeEntry (DATE d, Employee e, Project p, TimeEntryType et) = GROUP MIN TimeEntry t IF date(t) = d AND employee(t) = e AND project(t) = p AND type(t) = et;
hours 'Hours' (DATE d, Employee e, Project p, TimeEntryType et) =
    GROUP SUM hours(TimeEntry t) IF date(t) = d AND employee(t) = e AND project(t) = p AND type(t) = et;

timeEntry (DATE d, Employee e, Project p) = GROUP MIN TimeEntry t IF date(t) = d AND employee(t) = e AND project(t) = p;
hours 'Hours' (DATE d, Employee e, Project p) =
    GROUP SUM hours(TimeEntry t) IF date(t) = d AND employee(t) = e AND project(t) = p;
hours 'Hours' (Employee e, Project p, DATE from, DATE to) =
    GROUP SUM hours(TimeEntry t) IF employee(t) = e AND project(t) = p AND date(t) >= from AND date(t) <= to;
hours 'Hours' (Employee e, Project p, INTERVAL[DATE] i) = hours(e, p, from(i), to(i));

countTimeEntry 'Time entries' (DATE d, Employee e, Project p, TimeEntryType et) =
    GROUP SUM 1 IF date(TimeEntry t) = d AND employee(t) = e AND project(t) = p AND type(t) = et;

projectDescription 'Description' (TimeEntry e) = CONCAT ' / ', name(project(e)), (CONCAT ' : ', nameType(e), hours(e));  

hours 'Hours' (DATE d, Project p) = GROUP SUM hours(TimeEntry t) IF date(t) = d AND project(t) = p;
hours 'Hours' (Project p, DATE from, DATE to) = GROUP SUM hours(TimeEntry t) IF project(t) = p AND date(t) >= from AND date(t) <= to;
hours 'Hours' (Project p, INTERVAL[DATE] i) = hours(p, from(i), to(i));

timeEntries (DATE d, Employee e) = GROUP CONCAT projectDescription(TimeEntry t) IF date(t) = d AND employee(t) = e, '\n' ORDER t;

EXTEND FORM timeEntry
    PROPERTIES(t) nameProject
;

DESIGN timeEntry {
    header {
        MOVE PROPERTY(nameProject(t));
    }
}

EXTEND FORM timeEntries
    PROPERTIES(t) READONLY nameProject
;

EXTEND FORM project
    OBJECTS te = TimeEntry
    PROPERTIES(te) nameEmployee, date, hours, nameType, description, NEW, DELETE
    FILTERS project(te) = p
;

DESIGN project {
    details {
        NEW timeEntries {
            caption = badged('Time entries', '(' + countTimeEntry(p) + ')' + '(' + hoursTimeEntry(p) + ')');
            MOVE BOX(te) { caption = ''; }
        }
    }
}

EXTEND FORM projects
    PROPERTIES(p) READONLY countTimeEntry, hoursTimeEntry
;