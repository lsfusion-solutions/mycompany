MODULE ProjectAssignment;

REQUIRE Project, ProjectRole, Time, Assignee;

PRIORITY MasterData;

NAMESPACE ProjectManagement;

CLASS ProjectAssignment 'Project assignment';

project 'Project' = DATA Project (ProjectAssignment) NONULL DELETE;
nameProject 'Project' (ProjectAssignment a) = name(project(a));
countAssignments = GROUP SUM 1 BY project(ProjectAssignment a) MATERIALIZED;

// todo : rename to assignee
employee 'Employee' = DATA Assignee (ProjectAssignment) NONULL INDEXED;
nameEmployee 'Employee' (ProjectAssignment a) = name(employee(a));
nameTypeAssignee 'Type' (ProjectAssignment a) = nameType(employee(a));
countAssignments = GROUP SUM 1 BY employee(ProjectAssignment a) MATERIALIZED;

assigned (ProjectAssignment a, Employee e) = in(employee(a), e) MATERIALIZED;

role 'Project role' = DATA ProjectRole (ProjectAssignment);
nameRole 'Project role' (ProjectAssignment a) = name(role(a));

fromDate 'Date from' = DATA DATE (ProjectAssignment);
fromDate (ProjectAssignment a) <- currentDate() WHEN SET(a IS ProjectAssignment);

toDate 'Date to' = DATA DATE (ProjectAssignment);

active (ProjectAssignment a, DATE d) = d >= fromDate(a) AND NOT d > toDate(a);
active (ProjectAssignment a) = active(a, currentDate());

EXTEND FORM project
    OBJECTS pa = ProjectAssignment
    PROPERTIES(pa) nameEmployee, nameTypeAssignee, nameRole, fromDate, toDate, NEW, DELETE
    FILTERS project(pa) = p
    
    FILTERGROUP active
        FILTER 'Active' active(pa)
;

DESIGN project {
    details {
        MOVE BOX(pa) { caption = badged('Assignments', countAssignments(p)); }
    }
}

INDEX project(ProjectAssignment a), role(a), fromDate(a), a;

assignment (Project p, Employee e, ProjectRole r, DATE d) = 
    GROUP LAST ProjectAssignment a ORDER fromDate(a), a WHERE active(a, d) AND assigned(a, e) BY project(a), role(a);

assignment (Project p, Employee e, DATE d) =
    GROUP LAST ProjectAssignment a ORDER fromDate(a), a WHERE active(a, d) AND assigned(a, e) BY project(a);

TABLE projectEmployeeRole (Project, Employee, ProjectRole);
assignment (Project p, Employee e, ProjectRole r) = assignment(p, e, r, currentDate()) MATERIALIZED;

roles 'Roles' (Project p, Employee e, DATE d) = GROUP CONCAT name(ProjectRole r) IF assignment(p, e, r, d), ', ' ORDER r;
roles 'Roles' (Project p, Employee e) = GROUP CONCAT name(ProjectRole r) IF assignment(p, e, r), ', ' ORDER r;

assigned (Project p, Employee e, DATE from, DATE to) = GROUP SUM 1 IF fromDate(ProjectAssignment a) <= to AND NOT toDate(a) < from AND project(a) = p AND assigned(a, e);
assigned (Project p, Employee e, INTERVAL[DATE] i) = assigned(p, e, from(i), to(i));

assigned (Project p, Employee e, DATE d) = GROUP SUM 1 IF active(ProjectAssignment a, d) AND project(a) = p AND assigned(a, e);
assigned (Project p, Employee e) = assigned(p, e, currentDate()) MATERIALIZED;
countEmployees (Project p) = GROUP SUM 1 IF assigned(p, Employee e);

assigned (Employee e, DATE from, DATE to) = GROUP SUM 1 IF fromDate(ProjectAssignment a) <= to AND NOT toDate(a) < from AND assigned(a, e);

calcDefaultProject (Employee e) = GROUP LAST Project p ORDER p WHERE assigned(p, e);
countProjects (Employee e) = GROUP SUM 1 IF assigned(Project p, e);

defaultProject (Employee e) = calcDefaultProject(e) IF countProjects(e) = 1;

EXTEND FORM project
    OBJECTS pd = DATE PANEL
    PROPERTIES(pd) date 'Date' = VALUE
    
    OBJECTS pe = Employee
    PROPERTIES(pe) READONLY firstName, lastName, namePosition
    PROPERTIES READONLY roles(p, pe, pd)
    FILTERS assigned(p, pe, pd);
;

DESIGN project {
    details {
        NEW employees {
            caption = badged('Employees', countEmployees(p));
            MOVE PROPERTY(date);
            MOVE BOX(pe);       
        }
    }
}

accessToAllProjects 'Access to all projects' = DATA BOOLEAN (Employee);

accessAllProjects = ABSTRACT VALUE BOOLEAN (CustomUser) MATERIALIZED;
accessAllProjects(Employee e) += accessToAllProjects(e);
accessAllProjects(CustomUser u) += u IS CustomUser AND NOT countAssignments(u);

hasAccess = ABSTRACT VALUE BOOLEAN (Project, CustomUser);
hasAccess (Project p, CustomUser u) += TRUE IF assigned(p, u);

EXTEND FORM projects
    FILTERS hasAccess(p, currentUser()) OR accessAllProjects(currentUser())
;

EXTEND FORM dialogProjects
    FILTERS hasAccess(p, currentUser()) OR accessAllProjects(currentUser())
;

EXTEND FORM employee
    PROPERTIES(e) accessToAllProjects
    
    OBJECTS pa = ProjectAssignment
    PROPERTIES(pa) nameProject, nameRole, fromDate, toDate, NEW, DELETE
    FILTERS assigned(pa, e) 

    FILTERGROUP active
        FILTER 'Active' active(pa)
;

DESIGN employee {
    details {
        NEW projects {
            caption = badged('Projects', countAssignments(e));
            MOVE PROPERTY(accessToAllProjects(e));
            MOVE BOX(pa) { caption = ''; }
        }
    }
}