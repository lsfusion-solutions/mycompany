MODULE ProjectReceipt;

REQUIRE Project, ReceiptDone;

NAMESPACE ProjectManagement;

// type
receiptType = DATA ReceiptType (ProjectType);
nameReceiptType 'Receipt type' (ProjectType t) = name(receiptType(t));
EXTEND FORM projectType PROPERTIES nameReceiptType(o);

project = DATA Project (Receipt) INDEXED;
nameProject 'Project' (Receipt i) = name(project(i));

countReceipts 'Receipts' (Project p) = GROUP SUM 1 IF project(Receipt i) = p;

EXTEND FORM receipt
    PROPERTIES(r) READONLYIF readonly(r) nameProject
;

DESIGN receipt {
    headerRight {
        MOVE PROPERTY(nameProject(r));
    }
}

EXTEND FORM receipts
    PROPERTIES(r) READONLY nameProject
;

EXTEND FORM project
    OBJECTS r = Receipt
    PROPERTIES(r) READONLY number, scheduledDateTime, 
                           imagedNameStatus BACKGROUND colorStatus(r), nameType, 
                           executionDateTime, nameLocation
    
    FILTERS project(r) = p
;

DESIGN project {
    details  {
        MOVE BOX(r) {
            caption = badged('Receipts', countReceipts(p));
        }
    }
}

fill ABSTRACT LIST (Receipt, Project);

create (Receipt i, Project p) {
    project(i) <- p;

    type(i) <- receiptType(type(p));

    fill(i, p);
}

createReceipt 'Create Receipt' (Project p) {
    APPLY;
    IF canceled() THEN RETURN;

    NEWSESSION {
        NEW r = Receipt {
            create(r, p);

            SHOW receipt OBJECTS r = r DOCKED;
        }
    }
}

EXTEND FORM project
    PROPERTIES(p) 'Add' = createReceipt DRAW r TOOLBAR
    PROPERTIES(r) NEWSESSION EDIT, DELETE
;