MODULE ProjectAttendanceMobile;

REQUIRE ProjectAttendance, AttendanceMobile, ProjectGeo;

NAMESPACE ProjectManagement;

attendanceProject = DATA LOCAL NESTED Project ();
nameAttendanceProject 'Project' () = name(attendanceProject());

CONSTRAINT attendanceProject() AND NOT active(attendanceProject())
    CHECKED BY attendanceProject[]
    MESSAGE '';

EXTEND FORM attendanceMobile
    PROPERTIES nameAttendanceProject() SELECT 'dropdown' SHOWIF NOT openedLastAttendance(e)

    PROPERTIES READONLY nameProject(a)
;

DESIGN attendanceMobile {
    OBJECTS {
        MOVE PROPERTY(nameAttendanceProject()) FIRST { fontSize = 24; };
        PROPERTY(nameProject(a)) { caption = ''; charWidth = 10; }
    }
}

start(Attendance a) + {
    project(a) <- attendanceProject();
}

// geo

attendanceNear (Project p, CustomUser u) = near(p) AND NOT skipAttendance(p, u);

countAttendanceNearProject (CustomUser u) = GROUP SUM 1 IF attendanceNear(Project p, u);
maxAttendanceNearProject (CustomUser u) = GROUP MAX Project p IF attendanceNear(p, u);

CONSTRAINT attendanceProject() AND NOT attendanceNear(attendanceProject(), currentUser()) AND NOT attendanceWithoutGeolocation(currentUser())
    CHECKED BY attendanceProject[]
    MESSAGE '';

META defineAttendanceProjectDefault(form, prop)
    WHEN LOCAL FORMS form SETCHANGED(latitude()) OR SETCHANGED(longitude()) DO
        IF countAttendanceNearProject(currentUser()) = 1 THEN
            prop() <- maxAttendanceNearProject(currentUser());
END

@defineAttendanceProjectDefault(attendanceMobile, attendanceProject);