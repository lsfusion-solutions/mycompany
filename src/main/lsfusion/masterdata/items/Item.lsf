MODULE Item;

REQUIRE MasterDataSettings, Category, Tax, Uom, MetaNumerator;

NAMESPACE MasterData;

CLASS ABSTRACT Item 'Номенклатура';
type 'Тип' (Item i) = objectClassName(i) IF i IS Item CHARWIDTH 6;

@defineID(item, 'Номенклатуры', 'НМ');

dataName 'Наименование' = DATA ISTRING[200] (Item) IN id NONULL CHARWIDTH 20;
prefixName 'Префикс' = ABSTRACT STRING (Item);
suffixName 'Суффикс' = ABSTRACT STRING (Item);

name 'Наименование (полное)' (Item i) = CONCAT ' ', prefixName(i), dataName(i), suffixName(i) CHARWIDTH 30 MATERIALIZED INDEXED;

category 'Категория' = DATA Category (Item) NONULL INDEXED;
idCategory 'Код категории' (Item i) = id(category(i));
nameCategory 'Категория' (Item i) = name(category(i));
canonicalNameCategory 'Категория (полная)' (Item i) = canonicalName(category(i));

// uom
uom 'Единица измерения' = DATA Uom (Item);
idUom 'Код единицы измерения' (Item i) = id(uom(i));
nameUom 'Единица измерения' (Item i) = name(uom(i));

dataDefaultUom = DATA Uom (Category);
nameDataDefaultUom 'Единица измерения' (Category c) = name(dataDefaultUom(c));
EXTEND FORM category PROPERTIES nameDataDefaultUom(c);
DESIGN category { default { MOVE PROPERTY(nameDataDefaultUom(c)); } }

defaultUom (Category c) = GROUP LAST dataDefaultUom(Category parent) ORDER DESC level(c, parent);
WHEN LOCAL SETCHANGED(category(Item i)) AND NOT CHANGED(uom(i)) DO uom(i) <- defaultUom(category(i));

cost 'Плановая себестоимость' = DATA NUMERIC[10,2] (Item) CHARWIDTH 15 NOFLEX;

archived 'Неактивный' = DATA BOOLEAN (Item) CHARWIDTH 10;
active 'Активный' (Item i) = NOT archived(i) CHARWIDTH 10;

level1 'Группа 1' (Item i) = nameCategory1(category(i));
level2 'Группа 2' (Item i) = nameCategory2(category(i));
level3 'Группа 3' (Item i) = nameCategory3(category(i));
level4 'Группа 4' (Item i) = nameCategory4(category(i));

readonly = ABSTRACT BOOLEAN (Item);

copy ABSTRACT LIST (Item, Item);
copy (Item n, Item o) + {
    dataName(n) <- dataName(o);
    category(n) <- category(o);
    uom(n) <- uom(o);
    archived(n) <- archived(o);
    cost(n) <- cost(o);
}

FORM item 'Номенклатура'
    OBJECTS i = Item PANEL
    PROPERTIES(i) dataName READONLYIF readonly(i), type READONLY, 
                  name READONLY, id, canonicalNameCategory READONLYIF readonly(i), nameUom READONLYIF readonly(i),
                  archived READONLYIF readonly(i), cost
      
    EDIT Item OBJECT i
;

DESIGN item {
    OBJECTS {        
        NEW header {                          
            NEW row1 {
                type = CONTAINERH;
                alignment = STRETCH;
                MOVE PROPERTY(dataName(i));
                MOVE PROPERTY(type(i));
            }
            MOVE PROPERTY(name(i)) { alignment = STRETCH; }                   
            NEW pane {
                type = CONTAINERH;
                alignment = STRETCH;
                NEW column1 {
                    MOVE PROPERTY(canonicalNameCategory(i));
                    MOVE PROPERTY(id(i));
                }        
                NEW column2 {
                    MOVE PROPERTY(nameUom(i));
                    MOVE PROPERTY(cost(i));
                }        
                NEW column3 {
                    MOVE PROPERTY(archived(i));
                }
            }    
        }
        NEW tabs {
            type = TABBED;
            fill = 1;
            NEW image {
                caption = 'Изображение';
            }
            NEW operations {
                type = TABBED;
                caption = 'Документы';
            }
        }
    }  
}

FORM items 'Номенклатура'
    TREE categories c = Category PARENT parent(c)
    PROPERTIES READONLY name(c)
    ORDER name(c)

    OBJECTS i = Item
    PROPERTIES(i) READONLYIF isReadonly() name, id, nameCategory, nameUom, type READONLY
    PROPERTIES(i) SHOWIF isReadonly() NEWSESSION EDIT, DELETE 
    FILTERS level(category(i), c)
    FILTERGROUP active
        FILTER 'Активный' active(i) 'F8' DEFAULT 
        FILTER 'Неактивный' archived(i) 'F7'
        
    LIST Item OBJECT i
;

@extendFormEditable(items);

DESIGN items {
    OBJECTS {
        NEW pane {
            type = SPLITH;
            fill = 1;
            NEW options {
                type = SPLITV;
                NEW categories {
                    fill = 1;
                    MOVE BOX(TREE categories);
                }
                NEW tabs {
                    fill = 1;
                    type = TABBED;
                }
            }                
            NEW details {
                fill = 2; 
                MOVE BOX(i) { 
                    GRID(i) { defaultComponent = TRUE; }
                }
            }

        }
    }
}

NAVIGATOR {
    masterData {
        NEW items;
    }
}
