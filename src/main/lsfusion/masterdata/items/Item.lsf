MODULE Item;

REQUIRE Category, Uom, MetaNumerator, Icon, Comments;

PRIORITY System;

NAMESPACE MasterData;

CLASS ABSTRACT Item '{Item}';
class 'Type' (Item i) = objectClassName(i) IF i IS Item CHARWIDTH 6;

@defineID(item, '{Items}', 'NM', 6);

category 'Category' = DATA Category (Item) NONULL INDEXED;
idCategory 'Category code' (Item i) = id(category(i));
nameCategory 'Category' (Item i) = name(category(i));
canonicalNameCategory 'Category (full)' (Item i) = canonicalName(category(i));

dataName '{Name}' = DATA ISTRING[200] (Item) IN id NONULL CHARWIDTH 20;
prefixName 'Prefix' = ABSTRACT STRING (Item);
suffixName 'Suffix' = ABSTRACT STRING (Item);

namePrefix 'Prefix' = DATA STRING (Category) CHARWIDTH 15;
EXTEND FORM category PROPERTIES(c) namePrefix;
DESIGN category { params { MOVE PROPERTY(namePrefix(c)); } }

name 'Name (full)' (Item i) = CONCAT ' ', namePrefix(category(i)), prefixName(i), dataName(i), suffixName(i) CHARWIDTH 30 MATERIALIZED INDEXED MATCH;

reference 'Reference' = DATA STRING[50] (Item) CHARWIDTH 10 INDEXED;
itemReference (STRING[50] ref) = GROUP MIN Item i BY reference(i); 

description 'Description' = DATA TEXT (Item);

// uom
uom = DATA Uom (Item);
idUom 'UoM code' (Item i) = id(uom(i));
nameUom 'UoM' (Item i) = name(uom(i));

CONSTRAINT DROPPED(Uom u IS Uom) AND PREV(uom(Item i) = u) MESSAGE 'You cannot delete the unit of measure referenced by the item'; 

dataDefaultUom = DATA Uom (Category);
nameDataDefaultUom 'Unit of measure' (Category c) = name(dataDefaultUom(c));
EXTEND FORM category PROPERTIES nameDataDefaultUom(c);
DESIGN category { default { MOVE PROPERTY(nameDataDefaultUom(c)); } }

defaultUom (Category c) = GROUP LAST dataDefaultUom(Category parent) ORDER DESC level(c, parent);
WHEN LOCAL SETCHANGED(category(Item i)) AND NOT uom(i) DO uom(i) <- defaultUom(category(i));

archived 'Archived' = DATA BOOLEAN (Item);
active '{Active}' (Item i) = NOT archived(i);

level1 'Category 1' (Item i) = nameCategory1(category(i));
level2 'Category 2' (Item i) = nameCategory2(category(i));
level3 'Category 3' (Item i) = nameCategory3(category(i));
level4 'Category 4' (Item i) = nameCategory4(category(i));

readonly = ABSTRACT BOOLEAN (Item);

copy ABSTRACT LIST (Item, Item);
copy (Item n, Item o) + {
    dataName(n) <- dataName(o);
    category(n) <- category(o);
    uom(n) <- uom(o);
    archived(n) <- archived(o);
}

FORM item '{Item}'
    OBJECTS i = Item PANEL
    PROPERTIES(i) dataName READONLYIF readonly(i), class READONLY, 
                  name READONLY, id, canonicalNameCategory READONLYIF readonly(i), nameUom READONLYIF readonly(i),
                  archived READONLYIF readonly(i),
                  reference READONLYIF readonly(i), '' = description READONLYIF readonly(i)
      
    EDIT Item OBJECT i
;

DESIGN item {
    caption = badged(name(i), class(i));
    OBJECTS {        
        NEW statusPane FIRST {
            horizontal = TRUE;
            alignment = STRETCH;                          
            NEW statusActions {
                horizontal = TRUE;                    
                flex = 1; 
                NEW primaryActions {
                    horizontal = TRUE;
                }
                NEW secondaryActions {
                    horizontal = TRUE;
                }           
            }
            NEW status {
                horizontal = TRUE;
            }
        }    
        NEW header {                          
            NEW row1 {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY(dataName(i));
                MOVE PROPERTY(class(i));
                MOVE PROPERTY(archived(i));
            }
            MOVE PROPERTY(name(i)) { alignment = STRETCH; }                   
            MOVE PROPERTY(canonicalNameCategory(i));
            NEW pane {
                horizontal = TRUE;
                alignment = STRETCH;
                NEW column1 {
                    MOVE PROPERTY(id(i));
                    MOVE PROPERTY(reference(i));
                }        
                NEW column2 {
                    MOVE PROPERTY(nameUom(i));
                }        
                NEW column3 {
                }
            }    
        }
        NEW tabs {
            tabbed = TRUE;
            fill = 1;
            height = 400;
            NEW operations {
                tabbed = TRUE;
                caption = 'Documents';
            }
            NEW description {
                caption = 'Description';
                fill = 1;
                MOVE PROPERTY(description(i)) { fill = 1; };
            }
        }
    }  
}

@defineObjectComments(item, i, tabs);

FORM items '{Items}'
    TREE categories c = Category PARENT parent(c)
    PROPERTIES READONLY name(c)
    ORDERS name(c)
    FILTERGROUP activeCategory
        FILTER '{Active}' active(c) DEFAULT

    OBJECTS i = Item
    PROPERTIES(i) READONLYIF isReadonly() name, id, nameCategory, nameUom, reference, class READONLY
    PROPERTIES(i) SHOWIF isReadonly() NEWSESSION EDIT, DELETE
    ORDERS name(i) 
    FILTERGROUP category
        FILTER 'By category' level(category(i), c) DEFAULT
    FILTERGROUP active
        FILTER '{Active}' active(i) 'F8' DEFAULT 
        FILTER 'Archived' archived(i) 'F7'
        
    LIST Item OBJECT i
;

@extendFormEditable(items);

DESIGN items {
    OBJECTS {
        NEW pane {
            horizontal = TRUE;
            fill = 1;
            NEW options {
                fill = 1;
                width = 200;
                NEW categories {
                    fill = 1;
                    MOVE BOX(TREE categories);
                }
                NEW tabs {
                    fill = 1;
                    tabbed = TRUE;
                }
            }                
            NEW details {
                fill = 3;
                width = 200;
                NEW filters {
                    caption = 'Filters';
                    horizontal = TRUE;
                    MOVE FILTERGROUP(category);
                    MOVE FILTERGROUP(active);
                }
                MOVE BOX(i) {
                    caption = '';
                    GRID(i) { defaultComponent = TRUE; }
                }
            }

        }
    }
}

NAVIGATOR {
    masterData {
        NEW items;
    }
}

DESIGN options {
    tabbedPane {
        NEW items {
            caption = 'Items';
        }
    }
}