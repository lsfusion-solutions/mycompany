MODULE ItemPack;

REQUIRE ItemUom;

NAMESPACE MasterData;

META defineItemPack(prefix, caption)

    // category
    prefix##Uom = DATA Uom (Category);
    name###prefix##Uom 'Unit of measure for '##caption (Category c) = name(prefix##Uom(c));

    parent###prefix##Uom (Category child) =
    GROUP LAST prefix##Uom(Category parent) ORDER DESC level(child, parent) WHERE prefix##Uom(parent);
    
    EXTEND FORM category
        PROPERTIES(c) name###prefix##Uom
    ;
    
    DESIGN category {
        params {
            MOVE PROPERTY(name###prefix##Uom(c));
        }
    }
    
    // item   
    data###prefix##Uom = DATA Uom (Item);
    prefix##Uom '{Markup_p}' (Item i) = OVERRIDE data###prefix##Uom(i), parent###prefix##Uom(category(i)) MATERIALIZED;
    name###prefix##Uom 'Unit of measure for '##caption (Item i) = name(prefix##Uom(i));
    
    EXTEND FORM item
        PROPERTIES(i) name###prefix##Uom
    ;
    
    DESIGN item {
        prefix {
            MOVE PROPERTY(name###prefix##Uom(i));
        }
    }
    
    prefix##Pack##Ratio 'Quantity in package' (Item i) = ratio(i, prefix##Uom(i)) MATERIALIZED;

END

META defineDocPack(doc, prefix, item, quantity, let)

    pack 'Show packages' = DATA BOOLEAN (###doc##Type);
    EXTEND FORM doc##Type PROPERTIES(o) pack;

    packUom = DATA Uom (###doc##Line);
    namePackUom 'Type of packaging' (###doc##Line l) = name(packUom(l));

    packRatio 'Quantity in package' (###doc##Line l) = ratio(item(l), packUom(l));

    WHEN LOCAL CHANGED(item(###doc##Line l)) AND pack(type(doc(l))) AND ratio(item(l), prefix##Uom(item(l))) AND NOT CHANGED(packUom(l)) DO
        packUom(l) <- prefix##Uom(item(l));

    CONSTRAINT packUom(###doc##Line l) AND NOT packRatio(l)
        CHECKED BY packUom[###doc##Line] MESSAGE 'The selected location does not have a conversion ratio to the base unit of measure'; 
    
    packQuantity 'Number of packages' = DATA NUMERIC[16,3] (###doc##Line);
    WHEN LOCAL (CHANGED(quantity(###doc##Line l)) OR CHANGED(item(l)) OR CHANGED(packUom(l))) AND packRatio(l) AND NOT CHANGED(packQuantity(l)) DO
        packQuantity(l) <- NUMERIC[16,3](quantity(l) / packRatio(l));
    
    changePackQuantity (###doc##Line l) {
        INPUT n = packQuantity(l) CHANGE DO {
            quantity(l) <- NUMERIC[16,3](packQuantity(l) * packRatio(l)) WHERE packRatio(l);
        }
    }
    
    EXTEND FORM doc
        PROPERTIES(l) READONLYIF readonly(let) SHOWIF pack(type(let)) BEFORE quantity(l) BACKGROUND RGB(255,255,212)
                      namePackUom,
                      packQuantity ON CHANGE changePackQuantity(l),
                      packRatio READONLY
    ;
    
END

META defineDocSearchPack(doc, prefix, let)    

    packQuantity 'Number of packages' (###doc o, Item i) = 
        GROUP SUM packQuantity(###doc##Line l) BY doc(l), item(l);
    
    changePackQuantity (###doc o, Item i) {
        INPUT q = NUMERIC[14,3] DO
            setQuantity(o, i, q * prefix##PackRatio(i));
    }
    
    EXTEND FORM doc
        PROPERTIES READONLYIF readonly(let) SHOWIF pack(type(let)) BEFORE quantity(let, itm) BACKGROUND RGB(255,255,212)
                   packQuantity(let, itm) READONLYIF NOT prefix##PackRatio(itm) ON CHANGE changePackQuantity(let, itm),
                   prefix##PackRatio(itm) READONLY
    ;
    
END