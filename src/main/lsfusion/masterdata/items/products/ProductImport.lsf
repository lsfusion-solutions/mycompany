MODULE ProductImport;

REQUIRE Product, BarCode, System, 
        ItemPurchase, ItemSales;

NAMESPACE MasterData;

productExport 'Экспорт товаров' () {
    NEWSESSION {
        IF NOT (GROUP SUM 1 IF Product p IS Product) THEN {
            NEW p = Product {
                id(p) <- '123';
                dataName(p) <- 'Мой продукт';
                category(p) <- GROUP LAST Category c ORDER name(c) IF c IS Category;
                
                weight(p) <- 0.415;
                volume(p) <- 1.5;
                
                cost(p) <- 3.45;
                salesPrice(p) <- 6.14;
            }
        }
    
        LOCAL f = EXCELFILE ();
        EXPORT XLSX HEADER FROM 'Код товара' = id(Product p), 'Наименование' = dataName(p), 'Код категории' = idCategory(p), 
                                'Код единицы измерения' = idUom(p), 'Вес единицы, кг' = weight(p), 'Объем единицы, м3' = volume(p),
                                'Плановая себестоимость' = cost(p), 'Цена продажи' = salesPrice(p), 'Код страны происхождения' = id(countryOrigin(p)) WHERE p IS Product TO f;   
        open(f());
    }
}

productImport 'Импорт товаров' () {
    LOCAL id = STRING[50] (INTEGER);
    LOCAL name = ISTRING[50] (INTEGER);
    LOCAL idCategory = ISTRING[50] (INTEGER);
    LOCAL idUom = ISTRING[50] (INTEGER);
    LOCAL weight = NUMERIC[11,3] (INTEGER);
    LOCAL volume = NUMERIC[11,3] (INTEGER);
    LOCAL cost = NUMERIC[10,2] (INTEGER);
    LOCAL salesPrice = NUMERIC[10,2] (INTEGER);
    LOCAL idCountryOrigin = STRING[3] (INTEGER);
       
    INPUT f = EXCELFILE DO {
        NEWSESSION {
            IMPORT XLS HEADER FROM f TO id = A, name = B, idCategory = C, idUom = D, weight = E,
                                        volume = F, cost = G, salesPrice = H, idCountryOrigin = I; 
            
            FOR [GROUP SUM 1 BY idCategory(INTEGER i)](STRING num) AND NOT category(num) DO {
                MESSAGE 'Отсутствует категория в базе данных с кодом ' + num + '. Импорт отменен';
                RETURN;
            }  

            FOR [GROUP SUM 1 BY idUom(INTEGER i)](STRING num) AND NOT uom(num) DO {
                MESSAGE 'Отсутствует единица измерения в базе данных с кодом ' + num + '. Импорт отменен';
                RETURN;
            }  
            
            FOR imported(INTEGER i) DO NEW p = Product {
                id(p) <- id(i);
                dataName(p) <- name(i);
                category(p) <- category(idCategory(i));
                uom(p) <- uom(idUom(i));
                weight(p) <- weight(i);
                volume(p) <- volume(i);
                cost(p) <- cost(i);
                salesPrice(p) <- salesPrice(i);
                countryOrigin(p) <- country(idCountryOrigin(i));
            }
            APPLY;
            MESSAGE 'Импорт завершен';
        }
    }    
}

EXTEND FORM MasterData.options 
    PROPERTIES productExport(), productImport()
;

DESIGN MasterData.options {
    import {
        NEW product {
            type = CONTAINERH;
            caption = 'Товары';
            MOVE PROPERTY(productImport());
            MOVE PROPERTY(productExport());
        }
    }
}

