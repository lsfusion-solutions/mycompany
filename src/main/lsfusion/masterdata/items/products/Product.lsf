MODULE Product;

REQUIRE MasterData, Item, CountryP;

NAMESPACE MasterData;

CLASS Product 'Product' : Item;
weight 'Unit weight, kg' = DATA NUMERIC[11,3] (Product);
volume 'Unit volume, m3' = DATA NUMERIC[11,3] (Product);

countryOrigin 'Country of origin'  = DATA Country (Product);
nameCountryOrigin 'Country of origin' (Product p) = name(countryOrigin(p));

copy 'Copy' (Product p) {
    NEWSESSION {
        NEW np = Product {
            weight(np) <- weight(p);
            volume(np) <- volume(p);
            countryOrigin(np) <- countryOrigin(p);
            copy(np, p);
            SHOW item OBJECTS i = np;
        }
    }
}

EXTEND FORM item
    PROPERTIES(i) weight, volume, nameCountryOrigin
;

DESIGN item {
    tabs {
        NEW inventory {
            showIf = i IS Product;
            caption = 'Inventory';
            NEW inventoryHeader {
                horizontal = TRUE;
                MOVE PROPERTY(weight(i)) { charWidth = 5; };
                MOVE PROPERTY(volume(i)) { charWidth = 5; };
            }  
        }
    }
    column2 {
        MOVE PROPERTY(nameCountryOrigin(i));
    }
}

EXTEND FORM items
    PROPERTIES(i) GRID READONLYIF isReadonly() weight, volume, nameCountryOrigin
;

DESIGN items {
    PROPERTY(weight(i)) { hide = TRUE; }
    PROPERTY(volume(i)) { hide = TRUE; }
    PROPERTY(nameCountryOrigin(i)) { hide = TRUE; }
}

newProduct 'Product' (Category c) {
    NEWSESSION {
        NEW p = Product {
            category(p) <- c;
            DIALOG item OBJECTS i = p DOCKED DO seek(p);
        }
    }
} IMAGE 'add.png' CHANGEKEY 'INSERT' HIDE;

newProduct 'Product' (ISTRING[200] name) {
    NEW p = Product {
        category(p) <- rootCategory();
        dataName(p) <- name;
        DIALOG item OBJECTS i = p INPUT DOCKED;
    }
}

EXTEND FORM item 
    PROPERTIES copyProduct = copy(i)
;
DESIGN item {
    secondaryActions {
        MOVE PROPERTY(copyProduct) { valueClass = 'btn-secondary'; }
    }
}

EXTEND FORM items
    PROPERTIES newProduct(c) DRAW i TOOLBAR 
;

// dialog product
FORM products 'Finished products'
    TREE categories c = Category PARENT parent(c)
    PROPERTIES READONLY name(c)
    ORDERS name(c)
    FILTERGROUP activeCategory
        FILTER '{Active}' active(c) DEFAULT

    OBJECTS p = Product
    PROPERTIES(p) READONLY name, id, nameCategory, nameUom, reference
    PROPERTIES(p) NEWSESSION NEW, EDIT, DELETE
    ORDERS name(p) 
    FILTERS level(category(p), c)
    FILTERGROUP active
        FILTER '{Active}' active(p) 'F8' DEFAULT 
        FILTER 'Archived' archived(p) 'F7'
        
    LIST Product OBJECT p
;

DESIGN products {
    OBJECTS {
        NEW pane {
            horizontal = TRUE;
            fill = 1;
            NEW categories {
                fill = 1;
                MOVE BOX(TREE categories);
            }
            MOVE BOX(p) {
                fill = 2; 
                GRID(p) { defaultComponent = TRUE; }
            }
        }
    }
}