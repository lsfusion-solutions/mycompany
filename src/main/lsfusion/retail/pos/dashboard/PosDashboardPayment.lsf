MODULE PosDashboardPayment;

REQUIRE PosDashboard, PaymentMethod, IncomingPaymentDebt, PosPaymentMethod, SessionPayment;

NAMESPACE Retail;

amount 'Сумма' = DATA LOCAL NUMERIC[14,2] (PaymentMethod);
paymentAmount() = GROUP SUM amount(PaymentMethod pm); 
notCashPaymentAmount() = GROUP SUM amount(PaymentMethod pm) IF NOT isCash(pm); 

change (Invoice i) = paymentAmount() (-) totalAmount(i); 

FORM posPayment 'Оплата'
    OBJECTS i = Invoice PANEL
    PROPERTIES nameCustomer(i), totalAmount(i), change 'Сдача' = change(i) IF change(i) > 0
    
    OBJECTS pm = PaymentMethod
    PROPERTIES(pm) name READONLY, amount 
    FILTERS NOT disabled(pos(session(i)), pm)
    
    PROPERTIES overFormOk = formOk() READONLYIF change(i) < 0 OR notCashPaymentAmount() > totalAmount(i) 
;

DESIGN posPayment {
    OBJECTS {
        NEW top {
            alignment = STRETCH;
            MOVE PROPERTY(nameCustomer(i)) { fontSize = 24; alignment = STRETCH; changeKey = 'F5'; }
            MOVE PROPERTY(totalAmount(i)) { fontSize = 24; alignment = STRETCH; }
        }
        NEW center {
            fill = 1;
            MOVE BOX(pm) {
                GRID(pm) {
                    defaultComponent = TRUE;
                    PROPERTY(name(pm)) { fontSize = 24; focusable = FALSE; }
                    PROPERTY(amount(pm)) { fontSize = 24; }
                }
                REMOVE TOOLBARBOX(pm);
            }
        }
        NEW bottom {
            alignment = STRETCH;
            MOVE PROPERTY(change) { fontSize = 24; alignment = STRETCH; }
        }
    }
    
    TOOLBARRIGHT {
        REMOVE PROPERTY(formRefresh());
        REMOVE PROPERTY(formOk());
        PROPERTY(formClose()) { fontSize = 24; fill = 1; }
        MOVE PROPERTY(overFormOk) { fontSize = 24; fill = 1; }
    }
}

EXTEND FORM posPayment
    EVENTS ON INIT { ACTIVATE PROPERTY posPayment.amount(pm); }
;

afterPosPayment ABSTRACT LIST (Invoice);

posPayment 'Оплата' (Session s, Invoice i) {
    amount(PaymentMethod pm) <- NULL;
    DIALOG posPayment OBJECTS i = i NOMANAGESESSION DO {
        FOR am = (amount(PaymentMethod pm) (-) (change(i) IF isCash(pm))) DO NEW p = IncomingPayment {
            done(p) <- TRUE;
            
            paymentMethod(p, i) <- pm;
            type(p) <- incomingPaymentType(pm);
            
            company(p) <- company(pos(session(i)));
            companyAccount(p) <- account(pos(session(i)), pm);
            
            partner(p) <- customer(i);
            
            amount(p) <- am;
            paid(p, i) <- am;
        }
        APPLY;
        IF canceled() THEN {
            DELETE IncomingPayment p WHERE SET(p IS IncomingPayment);
        } ELSE {
            createInvoice(s);
            afterPosPayment(i);
        }
    }
} CHANGEKEY 'ctrl ENTER';

EXTEND FORM posDashboard
    PROPERTIES(s, i) posPayment READONLYIF NOT totalAmount(i)
;

DESIGN posDashboard {
    actions {
        MOVE PROPERTY(posPayment(s, i)) { fill = 1; fontStyle = 'bold'; }
    }
}

// payment method total
EXTEND FORM posDashboard
    OBJECTS pm = PaymentMethod BEFORE si
    PROPERTIES READONLY paid(s, pm) COLUMNS (pm) HEADER name(pm) 

    PROPERTIES READONLY paid(si, pm) COLUMNS (pm) HEADER name(pm) 
;

DESIGN posDashboard {
    sessionTotal {
        MOVE PROPERTY(paid(s, pm));
    }
}