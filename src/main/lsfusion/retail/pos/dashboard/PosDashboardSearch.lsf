MODULE PosDashboardSearch;

REQUIRE PosDashboard, 
        SalesPricelistInvoice;

NAMESPACE Retail;

filterName '{Name}' = DATA LOCAL ISTRING (); 
filterPrice 'Price' = DATA LOCAL NUMERIC[14,2] ();

selectPosSearch 'Select' (Invoice i, Item it) {
    setQuantity(i, it, 1);
    SEEK posDashboard.l = lastInvoiceLine(i, it);
} CHANGEMOUSE 'DBLCLK';

EXTEND FORM posDashboard
    OBJECTS it = Item
    PROPERTIES(it) READONLY name, idBarCode, id, reference
    PROPERTIES(i, it) quantity ON CHANGE { changeQuantity(i, it); 
                                           IF lastInvoiceLine(i, it) THEN 
                                                SEEK posDashboard.l = lastInvoiceLine(i, it); }, 
                      selectPosSearch TOOLBAR
    PROPERTIES READONLY overListPrice(i, it)
    ORDERS name(it)

    FILTERS canBeSold(it),
            overListPrice(i, it),
            active(it)

    PROPERTIES() filterName, filterPrice
    FILTERS isISubstring(name(it), filterName()) OR NOT filterName(),
            overListPrice(i, it) = filterPrice() OR NOT filterPrice()

    FILTERGROUP searchFilter
        FILTER 'In document' quantity(i, it) 'shift F10'
;

DESIGN posDashboard {
    tabPane {
        NEW search FIRST {
            caption = 'Search';
            showIf = openedSession(p) AND NOT hideInvoice();
            NEW filters {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY(filterName()) { changeKey = 'F6'; }                
                MOVE PROPERTY(filterPrice()) { changeKey = 'F7'; }                
            }
            NEW searchItems {
                fill = 1;
                REMOVE BOX(it);
                MOVE GRID(it) {
                    PROPERTY(quantity(i,it)) { charWidth = 5; background = #EEEEFF; }
                    PROPERTY(overListPrice(i,it)) { charWidth = 6; }
                }
                MOVE TOOLBARBOX(it);
                MOVE FILTERS(it);
            }
        }
    }
}

// barcode add
processBarCode (Invoice i, InvoiceLine l, STRING b) + {
    FOR Item it = itemSingleBarCode(b) OR it = item(b) DO {
        setQuantity(i, it, quantity(i, it) (+) 1);
        SEEK posDashboard.l = lastInvoiceLine(i, it);
        consumedBarCode() <- TRUE;
    }
}