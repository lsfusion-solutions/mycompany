MODULE Bom;

REQUIRE FileUtils, MetaNumerator, Authentication, Comments,
        Product, Company, 
        ManufacturingSettings, BarCode, Icon;

NAMESPACE Manufacturing;

CLASS Bom 'Bill of Materials';

readonly = ABSTRACT CASE BOOLEAN (Bom);

@defineNumber(bom, 'Bills of Materials', 'SP');
bom (STRING[50] id) = GROUP AGGR Bom b BY number(b);

name '{Name}' = DATA ISTRING[50] (Bom);
description 'Description' (Bom b) = badged(name(b), number(b)) IN id;

archived 'Archived' = DATA BOOLEAN (Bom);
active '{Active}' (Bom b) = NOT archived(b);

item '{Item}' = DATA Item (Bom) NONULL DELETE;
nameItem '{Item}' (Bom b) = name(item(b));

quantity 'Qty' = DATA NUMERIC[16,3] (Bom) NONULL;

uom (Bom b) = uom(item(b));
nameUom 'UoM' (Bom b) = name(uom(b));

// default
dataDefaultBom = DATA Bom (Item);
calcDefaultBom (Item i) = GROUP LAST Bom b ORDER DESC b WHERE active(b) AND item(b) = i;
defaultBom (Item i) = OVERRIDE dataDefaultBom(i), calcDefaultBom(i);  

CONSTRAINT defaultBom(Item i) AND NOT item(defaultBom(i)) = i
    MESSAGE 'The default BOM item must match the item';
WHEN DROPPED(item(defaultBom(Item i)) = i) DO dataDefaultBom(i) <- NULL;

CONSTRAINT dataDefaultBom(Item i) AND archived(dataDefaultBom(i))
    MESSAGE 'The default BOM should be active';

default 'Default' (Bom b) = defaultBom(item(b)) = b;
changeDefault (Bom b) {
    INPUT l = BOOLEAN DO
        dataDefaultBom(Item i) <- b IF l WHERE i = item(b);
}

// lines
CLASS ComponentLine 'Component line';

bom 'Bill of Materials' = DATA Bom (ComponentLine) NONULL DELETE;

index '№' = PARTITION SUM 1 ORDER ComponentLine l BY bom(l) IN id MATERIALIZED CHARWIDTH 3;

item '{Item}' = DATA Item (ComponentLine);
nameItem '{Item}' (ComponentLine l) = name(item(l));
idBarCodeItem 'Barcode' (ComponentLine l) = idBarCode(item(l));
idItem '{ID}' (ComponentLine l) = id(item(l));

uom (ComponentLine l) = uom(item(l));
nameUom 'UoM' (ComponentLine l) = name(uom(l));

quantity 'Qty' = DATA NUMERIC[18,5] (ComponentLine);

costRatio 'Cost ratio' = DATA NUMERIC[8,5] (ComponentLine);

countComponentLine 'Components' (Bom b) = GROUP SUM 1 IF bom(ComponentLine l) = b MATERIALIZED;

// byproduct
CLASS ByproductLine 'Byproduct line';

bom 'Bill of Materials' = DATA Bom (ByproductLine) NONULL DELETE;

index '№' = PARTITION SUM 1 ORDER ByproductLine l BY bom(l) IN id MATERIALIZED CHARWIDTH 3;

product 'Product' = DATA Product (ByproductLine);
nameProduct 'Product' (ByproductLine l) = name(product(l));
idBarCodeProduct 'Barcode' (ByproductLine l) = idBarCode(product(l));
idProduct '{ID}' (ByproductLine l) = id(product(l));

uom (ByproductLine l) = uom(product(l));
nameUom 'UoM' (ByproductLine l) = name(uom(l));

quantity 'Qty' = DATA NUMERIC[16,3] (ByproductLine);

countByproductLine 'Byproducts' (Bom b) = GROUP SUM 1 IF bom(ByproductLine l) = b MATERIALIZED;

FORM bom 'Bill of Materials'
    OBJECTS b = Bom PANEL 
    PROPERTIES(b) number, nameItem, quantity, nameUom, name, 
                  default ON CHANGE changeDefault(b), archived
    
    OBJECTS c = ComponentLine
    PROPERTIES(c) index, nameItem, nameUom, idBarCodeItem, idItem, quantity, costRatio, NEW, DELETE 
    FILTERS bom(c) = b
    
    OBJECTS l = ByproductLine
    PROPERTIES(l) index, nameProduct, nameUom, idBarCodeProduct, idProduct, quantity, NEW, DELETE
    FILTERS bom(l) = b
    
    EDIT Bom OBJECT b
;

DESIGN bom {
    caption = badged('Bill of Materials', number(b));
    OBJECTS {
        NEW actions {
            caption = 'Actions';
            horizontal = TRUE;
            alignment = STRETCH;
        }
        NEW header {
            alignment = STRETCH;
            horizontal = TRUE;
            NEW headerLeft {
                MOVE PROPERTY(number(b))  { notNull = TRUE; }
                MOVE PROPERTY(nameItem(b)) { notNull = TRUE; }
                NEW quantity {
                    horizontal = TRUE;
                    MOVE PROPERTY(quantity(b));
                    MOVE PROPERTY(nameUom(b));
                }
                MOVE PROPERTY(name(b));
            }
            NEW headerRight {
                MOVE PROPERTY(default(b));           
                MOVE PROPERTY(archived(b));           
            }
        }
        NEW details {
            fill = 1;
            tabbed = TRUE;
            MOVE BOX(c) { caption = 'Components'; }
            MOVE BOX(l) { caption = 'Byproducts'; }
        }
    }
}

@defineObjectComments(bom, b, details);

@defineObjectFiles(bom, b, 'Bill of materials file');

FORM boms 'Bills of Materials'
    OBJECTS b = Bom
    PROPERTIES(b) READONLY number, nameItem, quantity, nameUom, name, archived, countComponentLine, countByproductLine
    PROPERTIES(b) NEWSESSION NEW, EDIT, DELETE
    
    FILTERGROUP active
        FILTER '{Active}' active(b) DEFAULT
    
    LIST Bom OBJECT b
;

NAVIGATOR {
    operations {
        NEW boms;
    }
}

FORM dialogItemBoms 'Select Bill of Materials'
    OBJECTS i = Item PANEL
    
    OBJECTS b = Bom
    PROPERTIES(b) READONLY number, name
    FILTERS item(b) = i,
            active(b)
;

// copy
extraCopy ABSTRACT (Bom, Bom);
extraCopy ABSTRACT (ComponentLine, ComponentLine);

copy 'Copy' (Bom b) {
    NEWSESSION {
        NEW nb = Bom {
            name(nb) <- name(b);
            item(nb) <- item(b);
            quantity(nb) <- quantity(b);
            
            FOR bom(ComponentLine l) = b DO NEW nl = ComponentLine {
                bom(nl) <- nb;
                item(nl) <- item(l);
                quantity(nl) <- quantity(l);
                costRatio(nl) <- costRatio(l);
                
                extraCopy(l, nl);
            }
            
            FOR bom(ByproductLine l) = b DO NEW nl = ByproductLine {
                bom(nl) <- nb;
                product(nl) <- product(l);
                quantity(nl) <- quantity(l);
            }
            
            extraCopy(b, nb);
            
            SHOW bom OBJECTS b = nb DOCKED;
        }
    }
}

EXTEND FORM bom PROPERTIES copy(b);

DESIGN bom {
    actions {
        MOVE PROPERTY(copy(b)); 
    }
}