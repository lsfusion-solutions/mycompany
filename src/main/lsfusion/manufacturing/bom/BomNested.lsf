MODULE BomNested;

REQUIRE Bom;

NAMESPACE Manufacturing;

// nested
dataNestedBom 'Спецификация' = DATA Bom (ComponentLine);
CONSTRAINT dataNestedBom(ComponentLine l) AND NOT item(l) = item(dataNestedBom(l))
    CHECKED BY dataNestedBom
    MESSAGE 'Номенклатура спецификации компонента должна равняться номенклатуре компонента';

nestedBom (ComponentLine c) = OVERRIDE dataNestedBom(c), defaultBom(item(c));
descriptionNestedBom 'Спецификация' (ComponentLine c) = description(nestedBom(c));

// nested        
textIndex (ComponentLine c) = lpad(TEXT(index(c)), 4, '0');

level 'Уровень' (Bom b, ComponentLine c, TEXT path) =
    RECURSION 1l IF bom(c) = b AND path = textIndex(c)
         STEP 2l IF bom(c) = nestedBom($c) AND path = ($path + '/' + textIndex(c)); //MATERIALIZED

// quantity        
quantity (Bom b, ComponentLine c, TEXT path, NUMERIC[20,11] q) =
    RECURSION NUMERIC[20,11](1.0) IF q = quantity(c) AND bom(c) = b AND path = lpad(TEXT(index(c)), 4, '0')
         STEP NUMERIC[20,11](1.0) IF q = $q * quantity(c) / quantity(bom(c)) AND bom(c) = nestedBom($c) AND path = ($path + '/' + lpad(TEXT(index(c)), 4, '0')) CYCLES NO; //MATERIALIZED

quantity 'Кол-во' (Bom b, ComponentLine c, TEXT path) = 
    GROUP SUM quantity(b, c, path, NUMERIC[20,11] q) * q; 

// intermediate         
intermediate 'Промежуточная' = DATA BOOLEAN (Bom);

EXTEND FORM bom
    PROPERTIES(b) intermediate
    
    PROPERTIES(c) descriptionNestedBom BACKGROUND dataNestedBom(c)
;

DESIGN bom {
    headerRight {
        MOVE PROPERTY(intermediate(b));
    }
}

intermediateBom (Bom b, ComponentLine c, TEXT path) =
    RECURSION 1l IF bom(c) = b AND path = textIndex(c) 
         STEP 2l IF bom(c) = nestedBom($c) AND path = ($path + '/' + textIndex(c)) AND intermediate(nestedBom($c));

// copy
extraCopy(Bom b, Bom nb) + { intermediate(nb) <- intermediate(b); }
extraCopy(ComponentLine l, ComponentLine nl) + { nestedBom(nl) <- nestedBom(l); }