MODULE ManufacturingOrderInProgress;

REQUIRE ManufacturingOrderReady, Input;

NAMESPACE Manufacturing;

EXTEND CLASS ManufacturingOrderStatus {
    inProgress 'In progress'
}
inProgress 'In progress' = DATA BOOLEAN (ManufacturingOrder);

status(ManufacturingOrder m) += WHEN inProgress(m) THEN ManufacturingOrderStatus.inProgress;
color(ManufacturingOrderStatus m) += WHEN m = ManufacturingOrderStatus.inProgress THEN RGB(252,247,149);

consumed 'Consumed' = DATA NUMERIC[16,3] (ConsumedLine);
consumed 'Consumed' (ManufacturingOrder o) = GROUP SUM consumed(ConsumedLine l) IF manufacturingOrder(l) = o AND item(l) = item(o) MATERIALIZED;

produced 'Produced' = DATA NUMERIC[16,3] (FinishedLine);
produced 'Produced' (ManufacturingOrder o) = GROUP SUM produced(FinishedLine l) IF manufacturingOrder(l) = o AND item(l) = item(o) MATERIALIZED;

// manufacture
manufactured 'Produced' (ManufacturingOrder o) = IF unbuild(o) THEN consumed(o) ELSE produced(o);

setManufactured (ManufacturingOrder o, NUMERIC[16,3] q) {
    produced(FinishedLine l) <- NUMERIC[16,3](toProduce(l) * q / toManufacture(o)) WHERE manufacturingOrder(l) = o; 
    consumed(ConsumedLine l) <- NUMERIC[16,3](toConsume(l) * q / toManufacture(o)) WHERE manufacturingOrder(l) = o; 
}

changeManufactured (ManufacturingOrder o) {
    INPUT q = NUMERIC[16,3] DO
        setManufactured(o, q);
}

manufacture '{Manufacture}' (ManufacturingOrder m) {
    APPLY;
    IF canceled() THEN RETURN;
        
    NEWSESSION {
        DIALOG dialogQuantity OBJECTS q = toManufacture(m) INPUT DO {
            setManufactured(m, q);
            inProgress(m) <- TRUE;
            APPLY;
        }
    }
}

EXTEND FORM manufacturingOrder
    PROPERTIES(o) manufacture SHOWIF (status(o) = ManufacturingOrderStatus.ready OR status(o) = ManufacturingOrderStatus.inProgress), 
                  inProgress 
                  
    PROPERTIES SHOWIF inProgress(o) manufactured(o) ON CHANGE changeManufactured(o),
                                    produced(l),
                                    consumed(c) 
;

DESIGN manufacturingOrder {
    primaryActions {
        MOVE PROPERTY(manufacture(o)) { valueClass = 'btn-primary'; }
    }
    statusGroup {
        MOVE PROPERTY(inProgress(o)) {
            valueClass = 'btn-check';
            captionClass = 'btn btn-outline-primary btn-arrow-right';
        }
    }
    quantity {
        MOVE PROPERTY(manufactured(o));
    }
}

EXTEND FORM manufacturingOrders
    PROPERTIES(o) READONLYIF isReadonly() manufactured AFTER toManufacture(o) ON CHANGE changeManufactured(o)

    EXTEND FILTERGROUP status
        FILTER 'In progress' status(o) = ManufacturingOrderStatus.inProgress    
;

@defineHistoryProperty(manufacturingOrder, manufactured, 'Produced');

@defineSelectionAction(manufacturingOrders, ManufacturingOrder, manufacture, '{Manufacture}', statuses);