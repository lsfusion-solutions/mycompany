MODULE ManufacturingOrderReady;

REQUIRE ManufacturingOrderWaiting, ResLedger;

NAMESPACE Manufacturing;

EXTEND CLASS ManufacturingOrderStatus {
    ready 'Ready'
}
ready 'Ready' = DATA BOOLEAN (ManufacturingOrder);

status (ManufacturingOrder s) += WHEN ready(s) THEN ManufacturingOrderStatus.ready;
color (ManufacturingOrderStatus s) += WHEN s = ManufacturingOrderStatus.ready THEN RGB(252,247,149);

CONSTRAINT ready(ManufacturingOrder o) AND NOT materialsLocation(o)
    MESSAGE 'No scrap storage location selected in production order'; 

// reserved
reserved 'Reserved' = DATA NUMERIC[16,3] (ConsumedLine);
countReservedLines (ManufacturingOrder m) = GROUP SUM 1 IF reserved(ConsumedLine l) AND manufacturingOrder(l) = m;

linesReserved (ManufacturingOrder m) = GROUP SUM 1 IF reserved(ConsumedLine l) = toConsume(l) AND manufacturingOrder(l) = m;
reserved (ManufacturingOrder m) = linesReserved(m) = countReservedLines(m);

onHand 'On hand' (ConsumedLine l) =
    prevOnHand(materialsLocation(manufacturingOrder(l)), item(l) AS Product);

expected 'Expected' (ConsumedLine l) =
    prevExpected(materialsLocation(manufacturingOrder(l)), item(l) AS Product);

available 'Available' (ConsumedLine l) = 
    prevAvailable(materialsLocation(manufacturingOrder(l)), item(l) AS Product) (+) PREV(reserved(l));

checkAvailability 'Check availability' (ManufacturingOrder m) {
    APPLY; 
    IF canceled() THEN RETURN;
    
    NEWSESSION { 
        reserved(ConsumedLine l) <- max(min(toConsume(l), available(l)), 0) WHERE manufacturingOrder(l) = m; 
        
        IF reserved(m) THEN
            ready(m) <- TRUE;
        APPLY;
    }
}

unreserve 'Unreserve' (ManufacturingOrder m) {
    NEWSESSION {
        reserved(ConsumedLine l) <- NULL WHERE manufacturingOrder(l) = m;
        ready(m) <- NULL;
        APPLY;
    }
}


EXTEND FORM manufacturingOrder
    PROPERTIES(o) checkAvailability SHOWIF (status(o) = ManufacturingOrderStatus.waiting OR status(o) = ManufacturingOrderStatus.ready)
                                           AND NOT reserved(o), 
                  unreserve SHOWIF (status(o) = ManufacturingOrderStatus.waiting OR status(o) = ManufacturingOrderStatus.ready) AND countReservedLines(o),
                  ready
    
    PROPERTIES(c) READONLY onHand, expected, available, reserved
;

DESIGN manufacturingOrder {
    primaryActions {
        MOVE PROPERTY(checkAvailability(o)) { valueClass = 'btn-primary'; }
    }
    secondaryActions {
        MOVE PROPERTY(unreserve(o)) { valueClass = 'btn-warning'; }
    }
    statusGroup {
        MOVE PROPERTY(ready(o)) {
            valueClass = 'btn-check';
            captionClass = 'btn btn-outline-primary btn-arrow-right';
        }
    }
}

EXTEND FORM manufacturingOrders
    EXTEND FILTERGROUP status
        FILTER 'Ready' status(o) = ManufacturingOrderStatus.ready    
;

@defineSelectionAction(manufacturingOrders, ManufacturingOrder, checkAvailability, 'Check availability', statuses);