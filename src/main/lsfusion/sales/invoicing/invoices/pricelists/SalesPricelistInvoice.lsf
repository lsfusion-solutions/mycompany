MODULE SalesPricelistInvoice;

REQUIRE Invoice, SalesPricelistValue, InvoiceCurrency;

NAMESPACE Sales;

// invoice type
priceType = DATA PriceType (InvoiceType);
namePriceType 'Price type' (InvoiceType t) = name(priceType(t));

EXTEND FORM invoiceType
    PROPERTIES(o) namePriceType
;

taxValid (InvoiceType it, PriceType pt) = 
    (taxIncluded(it) AND taxIncluded(pt)) OR (NOT taxIncluded(pt) AND NOT taxIncluded(it));

CONSTRAINT priceType(InvoiceType i) AND priceType(i) AND NOT taxValid(i, priceType(i))
           CHECKED BY priceType[InvoiceType]
           MESSAGE 'Invalid price type selected for the type of implementation, (not) including taxes'; 

// price types
priceType 'Price type' = DATA PriceType (Invoice);
namePriceType 'Price type' (Invoice o) =  name(priceType(o));

priceType (InvoiceLine l) = priceType(invoice(l));

CONSTRAINT type(Invoice i) AND priceType(i) AND NOT taxValid(type(i), priceType(i))
           CHECKED BY priceType[Invoice]
           MESSAGE 'For the invoice, a price type that is not valid for the type has been selected, (not) including taxes'; 

WHEN LOCAL CHANGED(customer(Invoice o)) OR CHANGED(type(o)) DO 
    priceType(o) <- OVERRIDE priceType(customer(o)), priceType(type(o));

// price
listPrice (InvoiceLine l) = 
    NUMERIC[10,2](overPriceA(priceType(invoice(l)), item(l), dateTime(l)) * 
                  rate1((OVERRIDE currency(l), defaultCurrency()), currency(priceType(invoice(l))), date(l)));  
defaultPrice (InvoiceLine l) += WHEN listPrice(l) THEN listPrice(l);
                                    
WHEN LOCAL (SETCHANGED(priceType(invoice(InvoiceLine l))) OR
            (SETCHANGED(dateTime(invoice(l))) AND status(invoice(l)) = InvoiceStatus.draft)) 
            AND NOT CHANGED(price(l)) DO {
    price(l) <- defaultPrice(l); 
}

EXTEND FORM invoice
    PROPERTIES(i) namePriceType
;

DESIGN invoice {
    headerLeft {
        MOVE PROPERTY(namePriceType(i)); 
    }
}

// search
overListPrice 'Price' (Invoice o, Item i) = overPriceA(priceType(o), i, dateTime(o));

EXTEND FORM invoice
    PROPERTIES(i, itm) READONLY overListPrice

    FILTERGROUP pricelist
        FILTER 'In pricelist' overListPrice(i, itm)
;