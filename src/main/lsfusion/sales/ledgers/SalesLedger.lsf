MODULE SalesLedger;

REQUIRE ItemCost, Partner, DateUtils, Location;

NAMESPACE Sales;

CLASS ABSTRACT SalesLedger 'Sales ledger';
class 'Type' (SalesLedger l) = objectClassName(l) IF l IS SalesLedger CHARWIDTH 15;

type 'Type' = ABSTRACT ISTRING[100] (SalesLedger) CHARWIDTH 20 MATERIALIZED;

skip 'Skip' = ABSTRACT BOOLEAN (SalesLedger) MATERIALIZED;

dateTime 'Time' = ABSTRACT DATETIME (SalesLedger) MATERIALIZED;
@defineDateTimeAggregation(SalesLedger);

number 'Number' = ABSTRACT STRING[50] (SalesLedger) CHARWIDTH 10 MATERIALIZED;

location = ABSTRACT Location (SalesLedger) MATERIALIZED;
nameLocation 'Location' (SalesLedger l) = name(location(l));

item '{Item}' = ABSTRACT Item (SalesLedger) MATERIALIZED;
nameItem '{Item}' (SalesLedger l) = name(item(l));

level2 'Category 2' (SalesLedger l) = level2(item(l));

customer = ABSTRACT Partner (SalesLedger) MATERIALIZED;
nameCustomer 'Partner' (SalesLedger l) = name(customer(l));

quantity 'Qty' = ABSTRACT NUMERIC[16,3] (SalesLedger) MATERIALIZED;

price 'Price' = ABSTRACT NUMERIC[10,2] (SalesLedger) MATERIALIZED;

costAmount 'Cost' (SalesLedger l) = ABSTRACT VALUE NUMERIC[14,2] (SalesLedger) MATERIALIZED;
costAmount (SalesLedger l) += NUMERIC[14,2] (quantity(l) * cost(item(l), date(l)));

untaxedAmount '{Amount}' = ABSTRACT NUMERIC[14,2] (SalesLedger) MATERIALIZED;

markupAmount 'Markup' (SalesLedger l) = untaxedAmount(l) (-) costAmount(l); 
markup '{Markup_p}' (SalesLedger l) = NUMERIC[10,2] (100.0 * markupAmount(l) / costAmount(l));

taxAmount 'Taxes' = ABSTRACT NUMERIC[14,2] (SalesLedger) MATERIALIZED;

amount 'Total amount' (SalesLedger l) = ABSTRACT NUMERIC[14,2] (SalesLedger) MATERIALIZED;