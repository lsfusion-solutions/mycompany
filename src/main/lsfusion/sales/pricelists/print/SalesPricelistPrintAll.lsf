MODULE SalesPricelistPrintAll;

REQUIRE SalesPricelistPrint, SalesPricelistValue;

NAMESPACE Sales;

changedPrice 'Changed' = DATA LOCAL BOOLEAN(); 
toPrintData 'Incl.' = DATA LOCAL BOOLEAN (Category);
toPrintData 'Incl.' = DATA LOCAL BOOLEAN (Item);

toPrint 'Incl.' (Item i) = OVERRIDE toPrintData(i), GROUP LAST toPrintData(Category c) ORDER level(category(i), c);  

FORM printAllParams 'Print options'
    OBJECTS t = PrintPricelistType PANEL

    OBJECTS date = DATETIME PANEL
    PROPERTIES(date) date 'Date' = VALUE
    
    PROPERTIES() changedPrice

    TREE categories c = Category PARENT parent(c) 
    PROPERTIES name(c) READONLY, toPrintData(c) BACKGROUND (GROUP SUM 1 IF toPrintData(Category cc) AND level(cc, c))
    ORDERS name(c)
    FILTERGROUP activeCategory
        FILTER '{Active}' active(c) DEFAULT
    
    OBJECTS pt = PriceType
    FILTERS set(t, pt)
    
    OBJECTS i = Item
    PROPERTIES(i) READONLY name, nameUom, idBarCode, id
    PROPERTIES READONLY    priceA(pt, i, date) COLUMNS (pt) HEADER name(pt)
    PROPERTIES toPrint(i)
    ORDERS name(i)
    FILTERGROUP inItem
        FILTER 'Included' toPrint(i) 
    FILTERS level(category(i), c), canBeSold(i)

    EVENTS ON INIT { 
        FOR toPrintData(Category cc) DO 
            EXPAND UP printAllParams.c OBJECTS c = cc; 
    }
;

DESIGN printAllParams {
    OBJECTS {
        NEW header {
            horizontal = TRUE;
            MOVE PROPERTY(date);
            MOVE PROPERTY(changedPrice());
        }
        NEW items {
            fill = 1;
            horizontal = TRUE;
            MOVE BOX(TREE categories);
            NEW itemPane {
                fill = 1;
                NEW itemHeader {
                    horizontal = TRUE;
                    alignment = STRETCH;
                }
                MOVE BOX(i);
            }
        }
    }
}

// actions
dropPrint 'Reset' () {
    toPrintData (Category c) <- NULL;
    toPrintData (Item i) <- NULL;
}
selectPrint 'Select all' () {
    toPrintData (Item i) <- TRUE WHERE [FILTER printAllParams.i](i);
}

EXTEND FORM printAllParams
    PROPERTIES() DRAW i TOOLBAR dropPrint, selectPrint
;

// print
printAll 'Print' (PrintPricelistType t) {
    toPrintData (Category c) <- set(t, c);
    DIALOG printAllParams OBJECTS t = t, date INPUT DOCKED DO {
        price(PriceType pt, Item i) <- priceA(pt, i, date) IF (toPrint(i) OR NOT GROUP SUM 1 IF toPrint(Item j)) AND
            set(t, pt) AND canBeSold(i) AND (NOT changedPrice() OR startDateTimeA(pt, i, date) = date);
            
        print(t);
    }
} CHANGEMOUSE 'DBLCLK';

EXTEND FORM pricelists
    PROPERTIES(pp) printAll SHOWIF hasTemplate(pp)
;

DESIGN pricelists {
    print {
        NEW actions FIRST {
            horizontal = TRUE;
            MOVE PROPERTY(printAll(pp));
        }
    }
}
