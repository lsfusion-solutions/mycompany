MODULE SalesPricelistPrintType;

REQUIRE SalesPricelist, DocTemplate;

NAMESPACE Sales;

CLASS PrintPricelistType 'Pricelist template';

name '{Name}' = DATA STRING[50] (PrintPricelistType);

company = DATA Company (PrintPricelistType);
nameCompany 'Company' (PrintPricelistType t) = name(company(t)); 

WHEN LOCAL SET(PrintPricelistType t IS PrintPricelistType) AND NOT CHANGED(company(t)) DO company(t) <- defaultCompany();

template 'Template' = DATA STRING (PrintPricelistType) CHARWIDTH 50;

file = DATA FILE (PrintPricelistType);
hasFile (PrintPricelistType t) = TRUE IF file(t);

hasTemplate (PrintPricelistType t) = template(t) OR hasFile(t);

openFile 'Open' (PrintPricelistType t) { 
    IF hasFile(t) THEN {
        open(file(t));
    } ELSE IF template(t) THEN {
        readResource(template(t));
        open(resourceFile());
    } 
}
loadFile 'Upload' (PrintPricelistType t) { INPUT = file(t) CHANGE; }
dropFile 'Reset' (PrintPricelistType t) { file(t) <- NULL; } 

format = DATA TemplateFormat (PrintPricelistType);
nameFormat 'Format' (PrintPricelistType t) = name(format(t));

// category
set 'Incl.' = DATA BOOLEAN (PrintPricelistType, Category);

countCategory (PrintPricelistType t) = GROUP SUM 1 IF set(t, Category c) MATERIALIZED;
set 'Incl.' (PrintPricelistType t, Item i) = (GROUP LAST set(t, Category pc) ORDER level(category(i), pc)) OR NOT countCategory(t);

// pricetype
set 'Incl.' = DATA BOOLEAN (PrintPricelistType, PriceType);

index 'Index' (PrintPricelistType t, PriceType pt) = PARTITION SUM 1 IF set(t, pt) ORDER pt BY t MATERIALIZED; 
priceType (PrintPricelistType t, INTEGER i) = GROUP MAX PriceType pt IF index(t, pt) = i; 

FORM printPricelistType 'Pricelist template'
    OBJECTS t = PrintPricelistType PANEL
    PROPERTIES(t) name, nameCompany, 
                  template SHOWIF NOT hasFile(t), openFile,
                  loadFile, dropFile SHOWIF hasFile(t), 
                  nameFormat
    
    TREE categories cat = Category PARENT parent(cat) 
    PROPERTIES name(cat) READONLY, set(t, cat) BACKGROUND (GROUP SUM 1 IF set(t, Category cc) AND level(cc, cat))
    ORDERS name(cat)
    FILTERGROUP activeCategory
        FILTER '{Active}' active(cat) DEFAULT
    
    OBJECTS pt = PriceType
    PROPERTIES name(pt) READONLY, set(t, pt), index(t, pt) READONLY
    
    EDIT PrintPricelistType OBJECT t
;

DESIGN printPricelistType {
    OBJECTS {
        NEW header {
            NEW general {
                alignment = STRETCH;
                horizontal = TRUE;
                MOVE PROPERTY(name(t));
                MOVE PROPERTY(nameCompany(t));
            }
            NEW format {
                alignment = STRETCH;
                horizontal = TRUE;
                MOVE PROPERTY(template(t));
                MOVE PROPERTY(openFile(t));
                MOVE PROPERTY(loadFile(t));
                MOVE PROPERTY(dropFile(t));
                MOVE PROPERTY(nameFormat(t));
            }
        }
        NEW details {
            fill = 1;
            horizontal = TRUE;
            MOVE BOX(TREE categories);
            MOVE BOX(pt);
        }
    }
}

FORM printPricelistTypes 'Pricelist templates'
    OBJECTS t = PrintPricelistType
    PROPERTIES READONLY name(t)
    
    LIST PrintPricelistType OBJECT t
;

EXTEND FORM options
    OBJECTS pp = PrintPricelistType
    
    PROPERTIES READONLY name(pp)
    PROPERTIES(pp) NEWSESSION NEW, EDIT, DELETE
;

DESIGN options {
    tabbedPane {
        MOVE BOX(pp);
    }
}

// add to pricelists form
EXTEND FORM pricelists
    OBJECTS pp = PrintPricelistType

    PROPERTIES READONLY name(pp)
;

DESIGN pricelists {
    OBJECTS {
        fill = 1;
        tabbed = TRUE;
        NEW print {
            caption = 'Print';
            MOVE BOX(pp) { caption = ''; }
        }
        NEW lists {
            caption = 'Pricelists';
            MOVE filters;
            MOVE BOX(p) { caption = ''; }
        }
    }
}

countPrintPricelistTypes 'Number of templates' () = GROUP SUM 1 IF r IS PrintPricelistType; 